var N=null,E="",T="t",U="u",searchIndex={};
var R=["initial","maximum","import","elements","Global","Function","Memory","Import","Anyref","Get the index for the given identifier.","instrseqid","instrseqbuilder","functionid","Append a new, nested `block ... end` to this builder's…","The local being set.","The operation being performed","The memory we're growing.","memory","The atomic operation being performed","The memory we're modifying","The alignment and offset from the base address","The memory we're loading from.","The alignment and offset of this memory load","`block ... end`","`loop ... end`","CallIndirect","`call_indirect`","LocalGet","`local.get n`","LocalSet","`local.set n`","LocalTee","`local.tee n`","GlobalGet","`global.get n`","GlobalSet","`global.set n`","`*.const`","Binary operations, those requiring two operands","Unary operations, those requiring one operand","`select`","Unreachable","`unreachable`","`if <consequent> else <alternative> end`","`br_table`","`return`","MemorySize","`memory.size`","MemoryGrow","`memory.grow`","MemoryInit","`memory.init`","DataDrop","`data.drop`","MemoryCopy","`memory.copy`","MemoryFill","`memory.fill`","`*.load`","`*.store`","AtomicRmw","An atomic read/modify/write operation.","An atomic compare-and-exchange operation.","AtomicNotify","The `atomic.notify` instruction to wake up threads.","AtomicWait","The `*.atomic.wait` instruction to block threads.","AtomicFence","The `atomic.fence` instruction","TableGet","`table.get`","TableSet","`table.set`","TableGrow","`table.grow`","TableSize","`table.size`","`ref.null`","RefIsNull","`ref.is_null`","V128Bitselect","`v128.bitselect`","V128Swizzle","`v128.swizzle`","V128Shuffle","`v128.shuffle`","LoadSplat","`iaaxbb.load_splat`","walrus::ir","walrus::ir::BinaryOp","walrus::ir::UnaryOp","walrus::ir::LoadKind","The different kinds of load instructions that are part of…","walrus::ir::StoreKind","atomic","The different kinds of atomic rmw operations","localfunction","instrseq","localid","memoryid","Called before the traversal will start visiting each of…","Called after the traversal finishes visiting each of the…","Visit `Instr`.","Visit `InstrSeqId`.","Visit `GlobalId`.","globalid","Visit `FunctionId`.","Visit `DataId`.","Visit `TypeId`","Visit `Value`.","Visit `Block`.","Visit `Loop`.","Visit `Call`.","Visit `CallIndirect`.","callindirect","Visit `LocalGet`.","Visit `LocalSet`.","Visit `LocalTee`.","Visit `GlobalGet`.","globalget","Visit `GlobalSet`.","globalset","Visit `Const`.","Visit `Binop`.","Visit `Unop`.","Visit `Select`.","Visit `Unreachable`.","unreachable","Visit `Br`.","Visit `BrIf`.","Visit `IfElse`.","Visit `BrTable`.","Visit `Drop`.","Visit `Return`.","Visit `MemorySize`.","memorysize","Visit `MemoryGrow`.","memorygrow","Visit `MemoryInit`.","memoryinit","Visit `DataDrop`.","Visit `MemoryCopy`.","memorycopy","Visit `MemoryFill`.","memoryfill","Visit `Load`.","Visit `Store`.","Visit `AtomicRmw`.","atomicrmw","Visit `Cmpxchg`.","Visit `AtomicNotify`.","atomicnotify","Visit `AtomicWait`.","atomicwait","Visit `AtomicFence`.","atomicfence","Visit `TableGet`.","Visit `TableSet`.","Visit `TableGrow`.","tablegrow","Visit `TableSize`.","tablesize","Visit `RefNull`.","Visit `RefIsNull`.","refisnull","Visit `V128Bitselect`.","v128bitselect","Visit `V128Swizzle`.","v128swizzle","Visit `V128Shuffle`.","v128shuffle","Visit `LoadSplat`.","loadsplat","moduletypes","instrseqtype","localget","localset","localtee","brtable","datadrop","cmpxchg","tableget","tableset","refnull","storekind","atomicwidth","tableid","shuffleindices","loadsplatkind","moduleconfig","rawcustomsection","Get an element associated with an ID","elementid","Get a shared reference to this module's passive elements.","Gets a reference to an export given its id","exportid","block_mut","Get the block associated with the given id.","functionbuilder","Get access to a `FunctionBuilder` to continue adding…","buildidhasher","Get the underlying `FunctionKind::Import` or panic if this…","importedfunction","Get the underlying `FunctionKind::Local` or panic if this…","modulefunctions","Gets a reference to a function given its id","iter_mut","Get an iterator of this module's local functions","add_import","add_local","get_mut","Gets a reference to a memory given its id","importid","Gets a reference to an import given its id","valtype","Get a shared reference to this module's globals.","tablekind","Returns the actual table associated with an ID","Iterates over all tables in this section.","Get a type associated with an ID","Gets the ID for a particular index.","walrus::passes","A passive element segment identifier","CustomSection","borrow_mut","try_from","try_into","clone_into","type_id","to_owned","to_string","idstoindices","customsection","into_inner_id","section_mut","section_box","default","functiontable","binaryop","loadkind","atomicop","partial_cmp","ordering","errorkind","untypedcustomsectionid","activedatalocation","importkind","typedcustomsectionid","exportitem","deref_mut","formatter","RawCustomSection","ActiveData","LocalFunction","FunctionTable","ErrorKind","ActiveDataLocation","ExportItem","FunctionKind","GlobalKind","ImportKind","TableKind","IdsToIndices","FunctionBuilder","InstrSeqBuilder","InstrSeqType","LoadSplatKind","ExtendedLoad","StoreKind","AtomicWidth","VisitorMut","ModuleConfig","ModuleCustomSections","ModuleData","ModuleElements","ModuleExports","ModuleFunctions","ModuleGlobals","ModuleImports","ModuleLocals","ModuleMemories","ModuleProducers","ModuleTables","ModuleTypes","IndicesToIds","CustomSectionId","TypedCustomSectionId","UntypedCustomSectionId"];

searchIndex["walrus"]={"doc":"The `walrus` WebAssembly transformations library.","i":[[3,R[262],"walrus","Maps our high-level identifiers to the raw indices they…",N,N],[3,R[263],E,"Build instances of `LocalFunction`.",N,N],[3,R[264],E,"A builder returned by instruction sequence-construction…",N,N],[3,R[272],E,"A collection of custom sections inside a Wasm module.",N,N],[3,R[251],E,"A raw, unparsed custom section.",N,N],[12,"name",E,"This custom section's name.",0,N],[12,"data",E,"This custom section's raw data.",0,N],[3,R[286],E,"The id of a `CustomSection` instance with a…",N,N],[3,R[287],E,"The id of some `CustomSection` instance in a…",N,N],[3,R[252],E,"The parts of a data segment that are only present in…",N,N],[12,R[17],E,"The memory that this active data segment will be…",1,N],[12,"location",E,"The memory location where this active data segment will be…",1,N],[3,"Data",E,"A data segment.",N,N],[12,"kind",E,"What kind of data segment is this? Passive or active?",2,N],[12,"value",E,"The data payload of this data segment.",2,N],[3,R[273],E,"All passive data sections of a wasm module, used to…",N,N],[3,"Element",E,"A passive segment which contains a list of functions",N,N],[12,"members",E,"The function members of this passive elements segment.",3,N],[3,R[274],E,"All element segments of a wasm module, used to initialize…",N,N],[3,"Export",E,"A named item exported from the wasm.",N,N],[12,"name",E,"The name of this export.",4,N],[12,"item",E,"The item being exported.",4,N],[3,R[275],E,"The set of exports in a module.",N,N],[3,R[5],E,"A wasm function.",N,N],[12,"kind",E,"The kind of function this is.",5,N],[12,"name",E,"An optional name associated with this function",5,N],[3,R[276],E,"The set of functions within a module.",N,N],[3,R[253],E,"A function defined locally within the wasm module.",N,N],[12,"args",E,"Arguments to this function, and the locals that they're…",6,N],[3,R[4],E,"A wasm global.",N,N],[12,"ty",E,"This global's type.",7,N],[12,"mutable",E,"Whether this global is mutable or not.",7,N],[12,"kind",E,"The kind of global this is",7,N],[3,R[277],E,"The set of globals in each function in this module.",N,N],[3,R[7],E,"A named item imported into the wasm.",N,N],[12,"module",E,"The module name of this import.",8,N],[12,"name",E,"The name of this import.",8,N],[12,"kind",E,"The kind of item being imported.",8,N],[3,R[278],E,"The set of imports in a module.",N,N],[3,R[279],E,"The set of locals in each function in this module.",N,N],[3,R[6],E,"A memory in the wasm.",N,N],[12,"shared",E,"Is this memory shared?",9,N],[12,R[0],E,"The initial page size for this memory.",9,N],[12,R[1],E,"The maximum page size for this memory.",9,N],[12,R[2],E,"Whether or not this memory is imported, and if so from…",9,N],[12,"data_segments",E,"Active data segments that will be used to initialize this…",9,N],[3,R[280],E,"The set of memories in this module.",N,N],[3,R[281],E,"Representation of the wasm custom section `producers`",N,N],[3,R[254],E,"Components of a table of functions (`anyfunc` table)",N,N],[12,R[3],E,"Layout of this function table that we know of, or those…",10,N],[12,"relative_elements",E,"Elements of this table which are relative to a global,…",10,N],[3,R[282],E,"The set of tables in this module.",N,N],[3,"Table",E,"A table in the wasm.",N,N],[12,R[0],E,"The initial size of this table",11,N],[12,R[1],E,"The maximum size of this table",11,N],[12,"kind",E,"Which kind of table this is",11,N],[12,R[2],E,"Whether or not this table is imported, and if so what…",11,N],[3,R[283],E,"The set of de-duplicated types within a module.",N,N],[3,R[271],E,"Configuration for a `Module` which currently affects…",N,N],[3,"Module",E,"A wasm module.",N,N],[12,"imports",E,E,12,N],[12,"tables",E,E,12,N],[12,"types",E,E,12,N],[12,"funcs",E,E,12,N],[12,"globals",E,E,12,N],[12,"locals",E,E,12,N],[12,"exports",E,E,12,N],[12,"memories",E,E,12,N],[12,"data",E,"Registration of passive data segments, if any",12,N],[12,R[3],E,"Registration of passive element segments, if any",12,N],[12,"start",E,"The `start` function, if any",12,N],[12,"producers",E,"Representation of the eventual custom section, `producers`",12,N],[12,"customs",E,"Custom sections found in this module.",12,N],[12,"name",E,"The name of this module, used for debugging purposes in…",12,N],[3,R[284],E,"Maps from old indices in the original Wasm binary to…",N,N],[3,"Type",E,"A function type.",N,N],[12,"name",E,"An optional name for debugging.",13,N],[4,R[255],E,"A leaf wasm error type.",N,N],[13,"InvalidWasm",E,"Given invalid input wasm.",14,N],[4,"InitExpr",E,"A constant which is produced in WebAssembly, typically…",N,N],[13,"Value",E,"An immediate constant value",15,N],[13,R[4],E,"A constant value referenced by the global specified",15,N],[4,R[256],E,"The memory location where an active data segment will be…",N,N],[13,"Absolute",E,"A static, absolute address within the memory.",16,N],[13,"Relative",E,"A relative address (expressed as a global's value) within…",16,N],[4,"DataKind",E,"The kind of data segment: passive or active.",N,N],[13,"Active",E,"An active data segment that is automatically initialized…",17,N],[13,"Passive",E,"A passive data segment that must be manually initialized…",17,N],[4,R[257],E,"An exported item.",N,N],[13,R[5],E,"An exported function.",18,N],[13,"Table",E,"An exported table.",18,N],[13,R[6],E,"An exported memory.",18,N],[13,R[4],E,"An exported global.",18,N],[4,R[258],E,"The local- or external-specific bits of a function.",N,N],[13,R[7],E,"An externally defined, imported wasm function.",19,N],[13,"Local",E,"A locally defined wasm function.",19,N],[13,"Uninitialized",E,"A locally defined wasm function that we haven't parsed yet…",19,N],[4,R[259],E,"The different kinds of globals a wasm module can have",N,N],[13,R[7],E,"An imported global without a known initializer",20,N],[13,"Local",E,"A locally declare global with the specified identifier",20,N],[4,R[260],E,"An imported item.",N,N],[13,R[5],E,"An imported function.",21,N],[13,"Table",E,"An imported table.",21,N],[13,R[6],E,"An imported memory.",21,N],[13,R[4],E,"An imported global.",21,N],[4,R[261],E,"The kinds of tables that can exist",N,N],[13,R[5],E,"A table of `anyfunc` functions.",22,N],[13,R[8],E,"A table of type `anyref` values",22,N],[4,"ValType",E,"A value type.",N,N],[13,"I32",E,"32-bit integer.",23,N],[13,"I64",E,"64-bit integer.",23,N],[13,"F32",E,"32-bit float.",23,N],[13,"F64",E,"64-bit float.",23,N],[13,"V128",E,"128-bit vector.",23,N],[13,R[8],E,"The `anyref` opaque value type",23,N],[0,"dot",E,"Utilities for emitting GraphViz dot files.",N,N],[11,"write_graphviz_dot",E,"Generate a GraphViz Dot file for this module, showing the…",12,[[["self"]],["result"]]],[11,"get_table_index",E,R[9],24,[[["self"],[R[186]]],["u32"]]],[11,"get_type_index",E,R[9],24,[[["self"],["typeid"]],["u32"]]],[11,"get_func_index",E,R[9],24,[[["self"],[R[12]]],["u32"]]],[11,"get_global_index",E,R[9],24,[[["self"],[R[105]]],["u32"]]],[11,"get_memory_index",E,R[9],24,[[["self"],[R[99]]],["u32"]]],[11,"get_element_index",E,R[9],24,[[["self"],[R[192]]],["u32"]]],[11,"get_data_index",E,R[9],24,[[["self"],["dataid"]],["u32"]]],[11,"new",E,"Creates a new, empty function builder.",25,[[[R[173]]],[R[198]]]],[11,"func_body_id",E,"Get the id of this function's body's instruction sequence.",25,[[["self"]],[R[10]]]],[11,"func_body",E,"Get a `InstrSeqBuilder` for building and mutating this…",25,[[["self"]],[R[11]]]],[11,"instr_seq",E,"Continue building and mutating an existing instruction…",25,[[["self"],[R[10]]],[R[11]]]],[11,"dangling_instr_seq",E,"Create a new instruction sequence that is unreachable.",25,[[["self"]],[R[11]]]],[11,"finish",E,"Finishes this builder, wrapping it all up and inserting it…",25,[[[R[98]],["vec",[R[98]]],[R[204]]],[R[12]]]],[11,"id",E,"Returns the id of the instruction sequence that we're…",26,[[["self"]],[R[10]]]],[11,"instrs",E,"Get this instruction sequence's instructions.",26,[[["self"]]]],[11,"instrs_mut",E,"Get this instruction sequence's instructions mutably.",26,[[["self"]],["vec"]]],[11,"instr",E,"Pushes a new instruction onto this builder's sequence.",26,[[["self"]],["self"]]],[11,"instr_at",E,"Splice a new instruction into this builder's sequence at…",26,[[["self"],["usize"]],["self"]]],[11,"i32_const",E,"Creates an `i32.const` instruction for the specified value.",26,[[["self"],["i32"]],["self"]]],[11,"i64_const",E,"Creates an `i64.const` instruction for the specified value.",26,[[["self"],["i64"]],["self"]]],[11,"f32_const",E,"Creates an `f32.const` instruction for the specified value",26,[[["self"],["f32"]],["self"]]],[11,"f64_const",E,"Creates an `f64.const` instruction for the specified value",26,[[["self"],["f64"]],["self"]]],[11,"block",E,R[13],26,[[["self"]],["self"]]],[11,"block_at",E,R[13],26,[[["self"],["usize"]],["self"]]],[11,"loop_",E,"Create a new `loop ... end` instruction sequence.",26,[[["self"]],["self"]]],[11,"loop_at",E,"Splice a new `loop ... end` into this instruction sequence…",26,[[["self"],["usize"]],["self"]]],[11,"if_else",E,"Build a new `if <consequent> else <alternative> end`…",26,[[["self"]],["self"]]],[11,"if_else_at",E,"Splice a new `if <consequent> else <alternative> end` into…",26,[[["self"],["usize"]],["self"]]],[0,"ir",E,"Intermediate representation for instructions.",N,N],[3,"Local",R[88],"A local variable or parameter.",N,N],[12,"name",E,"A human-readable name for this local, often useful when…",27,N],[3,"InstrSeq",E,"A sequence of instructions.",N,N],[12,"ty",E,"This block's type: its the types of values that are…",28,N],[12,"instrs",E,"The instructions that make up the body of this block.",28,N],[3,"Block",E,R[23],N,N],[12,"seq",E,"The id of this `block` instruction's inner `InstrSeq`.",29,N],[3,"Loop",E,R[24],N,N],[12,"seq",E,"The id of this `loop` instruction's inner `InstrSeq`.",30,N],[3,"Call",E,"`call`",N,N],[12,"func",E,"The function being invoked.",31,N],[3,R[25],E,R[26],N,N],[12,"ty",E,"The type signature of the function we're calling",32,N],[12,"table",E,"The table which `func` below is indexing into",32,N],[3,R[27],E,R[28],N,N],[12,"local",E,"The local being got.",33,N],[3,R[29],E,R[30],N,N],[12,"local",E,R[14],34,N],[3,R[31],E,R[32],N,N],[12,"local",E,R[14],35,N],[3,R[33],E,R[34],N,N],[12,"global",E,"The global being got.",36,N],[3,R[35],E,R[36],N,N],[12,"global",E,"The global being set.",37,N],[3,"Const",E,R[37],N,N],[12,"value",E,"The constant value.",38,N],[3,"Binop",E,R[38],N,N],[12,"op",E,R[15],39,N],[3,"Unop",E,R[39],N,N],[12,"op",E,R[15],40,N],[3,"Select",E,R[40],N,N],[3,R[41],E,R[42],N,N],[3,"Br",E,"`br`",N,N],[12,"block",E,"The target block to branch to.",41,N],[3,"BrIf",E,"`br_if`",N,N],[12,"block",E,"The target block to branch to when the condition is met.",42,N],[3,"IfElse",E,R[43],N,N],[12,"consequent",E,"The block to execute when the condition is true.",43,N],[12,"alternative",E,"The block to execute when the condition is false.",43,N],[3,"BrTable",E,R[44],N,N],[12,"blocks",E,"The table of target blocks.",44,N],[12,R[236],E,"The block that is branched to by default when `which` is…",44,N],[3,"Drop",E,"`drop`",N,N],[3,"Return",E,R[45],N,N],[3,R[46],E,R[47],N,N],[12,R[17],E,"The memory we're fetching the current size of.",45,N],[3,R[48],E,R[49],N,N],[12,R[17],E,R[16],46,N],[3,R[50],E,R[51],N,N],[12,R[17],E,R[16],47,N],[12,"data",E,"The data to copy in",47,N],[3,R[52],E,R[53],N,N],[12,"data",E,"The data to drop",48,N],[3,R[54],E,R[55],N,N],[12,"src",E,"The source memory",49,N],[12,"dst",E,"The destination memory",49,N],[3,R[56],E,R[57],N,N],[12,R[17],E,"The memory to fill",50,N],[3,"Load",E,R[58],N,N],[12,R[17],E,R[21],51,N],[12,"kind",E,"The kind of memory load this is performing",51,N],[12,"arg",E,R[22],51,N],[3,"Store",E,R[59],N,N],[12,R[17],E,"The memory we're storing to",52,N],[12,"kind",E,"The kind of memory store this is performing",52,N],[12,"arg",E,"The alignment and offset of this memory store",52,N],[3,R[60],E,R[61],N,N],[12,R[17],E,R[19],53,N],[12,"op",E,R[18],53,N],[12,"width",E,R[18],53,N],[12,"arg",E,R[20],53,N],[3,"Cmpxchg",E,R[62],N,N],[12,R[17],E,R[19],54,N],[12,"width",E,R[18],54,N],[12,"arg",E,R[20],54,N],[3,R[63],E,R[64],N,N],[12,R[17],E,"The memory we're notifying through",55,N],[12,"arg",E,R[20],55,N],[3,R[65],E,R[66],N,N],[12,R[17],E,"The memory we're waiting through.",56,N],[12,"arg",E,"The alignment and offset from the base address.",56,N],[12,"sixty_four",E,"Whether or not this is an `i32` or `i64` wait.",56,N],[3,R[67],E,R[68],N,N],[3,R[69],E,R[70],N,N],[12,"table",E,"The table we're fetching from.",57,N],[3,R[71],E,R[72],N,N],[12,"table",E,"The table we're storing to.",58,N],[3,R[73],E,R[74],N,N],[12,"table",E,"The table we're growing",59,N],[3,R[75],E,R[76],N,N],[12,"table",E,"The table we're getting the size of",60,N],[3,"RefNull",E,R[77],N,N],[3,R[78],E,R[79],N,N],[3,R[80],E,R[81],N,N],[3,R[82],E,R[83],N,N],[3,R[84],E,R[85],N,N],[12,"indices",E,"The indices that are used to create the final vector of…",61,N],[3,R[86],E,R[87],N,N],[12,R[17],E,R[21],62,N],[12,"kind",E,"The size of load this is performing",62,N],[12,"arg",E,R[22],62,N],[3,"MemArg",E,"Arguments to memory operations, containing a constant…",N,N],[12,"align",E,"The alignment of the memory operation, must be a power of…",63,N],[12,"offset",E,"The offset of the memory operation, in bytes from the…",63,N],[4,R[265],E,"The type of an instruction sequence.",N,N],[13,"Simple",E,"MVP Wasm blocks/loops/ifs can only push zero or one…",64,N],[13,"MultiValue",E,"The multi-value extension to Wasm allows arbitrary stack…",64,N],[4,"Instr",E,"An enum of all the different kinds of wasm instructions.",N,N],[13,"Block",E,R[23],65,N],[13,"Loop",E,R[24],65,N],[13,"Call",E,"`call`",65,N],[13,R[25],E,R[26],65,N],[13,R[27],E,R[28],65,N],[13,R[29],E,R[30],65,N],[13,R[31],E,R[32],65,N],[13,R[33],E,R[34],65,N],[13,R[35],E,R[36],65,N],[13,"Const",E,R[37],65,N],[13,"Binop",E,R[38],65,N],[13,"Unop",E,R[39],65,N],[13,"Select",E,R[40],65,N],[13,R[41],E,R[42],65,N],[13,"Br",E,"`br`",65,N],[13,"BrIf",E,"`br_if`",65,N],[13,"IfElse",E,R[43],65,N],[13,"BrTable",E,R[44],65,N],[13,"Drop",E,"`drop`",65,N],[13,"Return",E,R[45],65,N],[13,R[46],E,R[47],65,N],[13,R[48],E,R[49],65,N],[13,R[50],E,R[51],65,N],[13,R[52],E,R[53],65,N],[13,R[54],E,R[55],65,N],[13,R[56],E,R[57],65,N],[13,"Load",E,R[58],65,N],[13,"Store",E,R[59],65,N],[13,R[60],E,R[61],65,N],[13,"Cmpxchg",E,R[62],65,N],[13,R[63],E,R[64],65,N],[13,R[65],E,R[66],65,N],[13,R[67],E,R[68],65,N],[13,R[69],E,R[70],65,N],[13,R[71],E,R[72],65,N],[13,R[73],E,R[74],65,N],[13,R[75],E,R[76],65,N],[13,"RefNull",E,R[77],65,N],[13,R[78],E,R[79],65,N],[13,R[80],E,R[81],65,N],[13,R[82],E,R[83],65,N],[13,R[84],E,R[85],65,N],[13,R[86],E,R[87],65,N],[4,"Value",E,"Constant values that can show up in WebAssembly",N,N],[13,"I32",E,"A constant 32-bit integer",66,N],[13,"I64",E,"A constant 64-bit integer",66,N],[13,"F32",E,"A constant 32-bit float",66,N],[13,"F64",E,"A constant 64-bit float",66,N],[13,"V128",E,"A constant 128-bit vector register",66,N],[4,"BinaryOp",E,"Possible binary operations in wasm",N,N],[13,"I32Eq",E,E,67,N],[13,"I32Ne",E,E,67,N],[13,"I32LtS",E,E,67,N],[13,"I32LtU",E,E,67,N],[13,"I32GtS",E,E,67,N],[13,"I32GtU",E,E,67,N],[13,"I32LeS",E,E,67,N],[13,"I32LeU",E,E,67,N],[13,"I32GeS",E,E,67,N],[13,"I32GeU",E,E,67,N],[13,"I64Eq",E,E,67,N],[13,"I64Ne",E,E,67,N],[13,"I64LtS",E,E,67,N],[13,"I64LtU",E,E,67,N],[13,"I64GtS",E,E,67,N],[13,"I64GtU",E,E,67,N],[13,"I64LeS",E,E,67,N],[13,"I64LeU",E,E,67,N],[13,"I64GeS",E,E,67,N],[13,"I64GeU",E,E,67,N],[13,"F32Eq",E,E,67,N],[13,"F32Ne",E,E,67,N],[13,"F32Lt",E,E,67,N],[13,"F32Gt",E,E,67,N],[13,"F32Le",E,E,67,N],[13,"F32Ge",E,E,67,N],[13,"F64Eq",E,E,67,N],[13,"F64Ne",E,E,67,N],[13,"F64Lt",E,E,67,N],[13,"F64Gt",E,E,67,N],[13,"F64Le",E,E,67,N],[13,"F64Ge",E,E,67,N],[13,"I32Add",E,E,67,N],[13,"I32Sub",E,E,67,N],[13,"I32Mul",E,E,67,N],[13,"I32DivS",E,E,67,N],[13,"I32DivU",E,E,67,N],[13,"I32RemS",E,E,67,N],[13,"I32RemU",E,E,67,N],[13,"I32And",E,E,67,N],[13,"I32Or",E,E,67,N],[13,"I32Xor",E,E,67,N],[13,"I32Shl",E,E,67,N],[13,"I32ShrS",E,E,67,N],[13,"I32ShrU",E,E,67,N],[13,"I32Rotl",E,E,67,N],[13,"I32Rotr",E,E,67,N],[13,"I64Add",E,E,67,N],[13,"I64Sub",E,E,67,N],[13,"I64Mul",E,E,67,N],[13,"I64DivS",E,E,67,N],[13,"I64DivU",E,E,67,N],[13,"I64RemS",E,E,67,N],[13,"I64RemU",E,E,67,N],[13,"I64And",E,E,67,N],[13,"I64Or",E,E,67,N],[13,"I64Xor",E,E,67,N],[13,"I64Shl",E,E,67,N],[13,"I64ShrS",E,E,67,N],[13,"I64ShrU",E,E,67,N],[13,"I64Rotl",E,E,67,N],[13,"I64Rotr",E,E,67,N],[13,"F32Add",E,E,67,N],[13,"F32Sub",E,E,67,N],[13,"F32Mul",E,E,67,N],[13,"F32Div",E,E,67,N],[13,"F32Min",E,E,67,N],[13,"F32Max",E,E,67,N],[13,"F32Copysign",E,E,67,N],[13,"F64Add",E,E,67,N],[13,"F64Sub",E,E,67,N],[13,"F64Mul",E,E,67,N],[13,"F64Div",E,E,67,N],[13,"F64Min",E,E,67,N],[13,"F64Max",E,E,67,N],[13,"F64Copysign",E,E,67,N],[13,"I8x16ReplaceLane",E,E,67,N],[12,"idx",R[89],E,67,N],[13,"I16x8ReplaceLane",R[88],E,67,N],[12,"idx",R[89],E,67,N],[13,"I32x4ReplaceLane",R[88],E,67,N],[12,"idx",R[89],E,67,N],[13,"I64x2ReplaceLane",R[88],E,67,N],[12,"idx",R[89],E,67,N],[13,"F32x4ReplaceLane",R[88],E,67,N],[12,"idx",R[89],E,67,N],[13,"F64x2ReplaceLane",R[88],E,67,N],[12,"idx",R[89],E,67,N],[13,"I8x16Eq",R[88],E,67,N],[13,"I8x16Ne",E,E,67,N],[13,"I8x16LtS",E,E,67,N],[13,"I8x16LtU",E,E,67,N],[13,"I8x16GtS",E,E,67,N],[13,"I8x16GtU",E,E,67,N],[13,"I8x16LeS",E,E,67,N],[13,"I8x16LeU",E,E,67,N],[13,"I8x16GeS",E,E,67,N],[13,"I8x16GeU",E,E,67,N],[13,"I16x8Eq",E,E,67,N],[13,"I16x8Ne",E,E,67,N],[13,"I16x8LtS",E,E,67,N],[13,"I16x8LtU",E,E,67,N],[13,"I16x8GtS",E,E,67,N],[13,"I16x8GtU",E,E,67,N],[13,"I16x8LeS",E,E,67,N],[13,"I16x8LeU",E,E,67,N],[13,"I16x8GeS",E,E,67,N],[13,"I16x8GeU",E,E,67,N],[13,"I32x4Eq",E,E,67,N],[13,"I32x4Ne",E,E,67,N],[13,"I32x4LtS",E,E,67,N],[13,"I32x4LtU",E,E,67,N],[13,"I32x4GtS",E,E,67,N],[13,"I32x4GtU",E,E,67,N],[13,"I32x4LeS",E,E,67,N],[13,"I32x4LeU",E,E,67,N],[13,"I32x4GeS",E,E,67,N],[13,"I32x4GeU",E,E,67,N],[13,"F32x4Eq",E,E,67,N],[13,"F32x4Ne",E,E,67,N],[13,"F32x4Lt",E,E,67,N],[13,"F32x4Gt",E,E,67,N],[13,"F32x4Le",E,E,67,N],[13,"F32x4Ge",E,E,67,N],[13,"F64x2Eq",E,E,67,N],[13,"F64x2Ne",E,E,67,N],[13,"F64x2Lt",E,E,67,N],[13,"F64x2Gt",E,E,67,N],[13,"F64x2Le",E,E,67,N],[13,"F64x2Ge",E,E,67,N],[13,"V128And",E,E,67,N],[13,"V128Or",E,E,67,N],[13,"V128Xor",E,E,67,N],[13,"I8x16Shl",E,E,67,N],[13,"I8x16ShrS",E,E,67,N],[13,"I8x16ShrU",E,E,67,N],[13,"I8x16Add",E,E,67,N],[13,"I8x16AddSaturateS",E,E,67,N],[13,"I8x16AddSaturateU",E,E,67,N],[13,"I8x16Sub",E,E,67,N],[13,"I8x16SubSaturateS",E,E,67,N],[13,"I8x16SubSaturateU",E,E,67,N],[13,"I8x16Mul",E,E,67,N],[13,"I16x8Shl",E,E,67,N],[13,"I16x8ShrS",E,E,67,N],[13,"I16x8ShrU",E,E,67,N],[13,"I16x8Add",E,E,67,N],[13,"I16x8AddSaturateS",E,E,67,N],[13,"I16x8AddSaturateU",E,E,67,N],[13,"I16x8Sub",E,E,67,N],[13,"I16x8SubSaturateS",E,E,67,N],[13,"I16x8SubSaturateU",E,E,67,N],[13,"I16x8Mul",E,E,67,N],[13,"I32x4Shl",E,E,67,N],[13,"I32x4ShrS",E,E,67,N],[13,"I32x4ShrU",E,E,67,N],[13,"I32x4Add",E,E,67,N],[13,"I32x4Sub",E,E,67,N],[13,"I32x4Mul",E,E,67,N],[13,"I64x2Shl",E,E,67,N],[13,"I64x2ShrS",E,E,67,N],[13,"I64x2ShrU",E,E,67,N],[13,"I64x2Add",E,E,67,N],[13,"I64x2Sub",E,E,67,N],[13,"F32x4Add",E,E,67,N],[13,"F32x4Sub",E,E,67,N],[13,"F32x4Mul",E,E,67,N],[13,"F32x4Div",E,E,67,N],[13,"F32x4Min",E,E,67,N],[13,"F32x4Max",E,E,67,N],[13,"F64x2Add",E,E,67,N],[13,"F64x2Sub",E,E,67,N],[13,"F64x2Mul",E,E,67,N],[13,"F64x2Div",E,E,67,N],[13,"F64x2Min",E,E,67,N],[13,"F64x2Max",E,E,67,N],[4,"UnaryOp",E,"Possible unary operations in wasm",N,N],[13,"I32Eqz",E,E,68,N],[13,"I32Clz",E,E,68,N],[13,"I32Ctz",E,E,68,N],[13,"I32Popcnt",E,E,68,N],[13,"I64Eqz",E,E,68,N],[13,"I64Clz",E,E,68,N],[13,"I64Ctz",E,E,68,N],[13,"I64Popcnt",E,E,68,N],[13,"F32Abs",E,E,68,N],[13,"F32Neg",E,E,68,N],[13,"F32Ceil",E,E,68,N],[13,"F32Floor",E,E,68,N],[13,"F32Trunc",E,E,68,N],[13,"F32Nearest",E,E,68,N],[13,"F32Sqrt",E,E,68,N],[13,"F64Abs",E,E,68,N],[13,"F64Neg",E,E,68,N],[13,"F64Ceil",E,E,68,N],[13,"F64Floor",E,E,68,N],[13,"F64Trunc",E,E,68,N],[13,"F64Nearest",E,E,68,N],[13,"F64Sqrt",E,E,68,N],[13,"I32WrapI64",E,E,68,N],[13,"I32TruncSF32",E,E,68,N],[13,"I32TruncUF32",E,E,68,N],[13,"I32TruncSF64",E,E,68,N],[13,"I32TruncUF64",E,E,68,N],[13,"I64ExtendSI32",E,E,68,N],[13,"I64ExtendUI32",E,E,68,N],[13,"I64TruncSF32",E,E,68,N],[13,"I64TruncUF32",E,E,68,N],[13,"I64TruncSF64",E,E,68,N],[13,"I64TruncUF64",E,E,68,N],[13,"F32ConvertSI32",E,E,68,N],[13,"F32ConvertUI32",E,E,68,N],[13,"F32ConvertSI64",E,E,68,N],[13,"F32ConvertUI64",E,E,68,N],[13,"F32DemoteF64",E,E,68,N],[13,"F64ConvertSI32",E,E,68,N],[13,"F64ConvertUI32",E,E,68,N],[13,"F64ConvertSI64",E,E,68,N],[13,"F64ConvertUI64",E,E,68,N],[13,"F64PromoteF32",E,E,68,N],[13,"I32ReinterpretF32",E,E,68,N],[13,"I64ReinterpretF64",E,E,68,N],[13,"F32ReinterpretI32",E,E,68,N],[13,"F64ReinterpretI64",E,E,68,N],[13,"I32Extend8S",E,E,68,N],[13,"I32Extend16S",E,E,68,N],[13,"I64Extend8S",E,E,68,N],[13,"I64Extend16S",E,E,68,N],[13,"I64Extend32S",E,E,68,N],[13,"I8x16Splat",E,E,68,N],[13,"I8x16ExtractLaneS",E,E,68,N],[12,"idx",R[90],E,68,N],[13,"I8x16ExtractLaneU",R[88],E,68,N],[12,"idx",R[90],E,68,N],[13,"I16x8Splat",R[88],E,68,N],[13,"I16x8ExtractLaneS",E,E,68,N],[12,"idx",R[90],E,68,N],[13,"I16x8ExtractLaneU",R[88],E,68,N],[12,"idx",R[90],E,68,N],[13,"I32x4Splat",R[88],E,68,N],[13,"I32x4ExtractLane",E,E,68,N],[12,"idx",R[90],E,68,N],[13,"I64x2Splat",R[88],E,68,N],[13,"I64x2ExtractLane",E,E,68,N],[12,"idx",R[90],E,68,N],[13,"F32x4Splat",R[88],E,68,N],[13,"F32x4ExtractLane",E,E,68,N],[12,"idx",R[90],E,68,N],[13,"F64x2Splat",R[88],E,68,N],[13,"F64x2ExtractLane",E,E,68,N],[12,"idx",R[90],E,68,N],[13,"V128Not",R[88],E,68,N],[13,"I8x16Neg",E,E,68,N],[13,"I8x16AnyTrue",E,E,68,N],[13,"I8x16AllTrue",E,E,68,N],[13,"I16x8Neg",E,E,68,N],[13,"I16x8AnyTrue",E,E,68,N],[13,"I16x8AllTrue",E,E,68,N],[13,"I32x4Neg",E,E,68,N],[13,"I32x4AnyTrue",E,E,68,N],[13,"I32x4AllTrue",E,E,68,N],[13,"I64x2Neg",E,E,68,N],[13,"I64x2AnyTrue",E,E,68,N],[13,"I64x2AllTrue",E,E,68,N],[13,"F32x4Abs",E,E,68,N],[13,"F32x4Neg",E,E,68,N],[13,"F32x4Sqrt",E,E,68,N],[13,"F64x2Abs",E,E,68,N],[13,"F64x2Neg",E,E,68,N],[13,"F64x2Sqrt",E,E,68,N],[13,"I32x4TruncSF32x4Sat",E,E,68,N],[13,"I32x4TruncUF32x4Sat",E,E,68,N],[13,"I64x2TruncSF64x2Sat",E,E,68,N],[13,"I64x2TruncUF64x2Sat",E,E,68,N],[13,"F32x4ConvertSI32x4",E,E,68,N],[13,"F32x4ConvertUI32x4",E,E,68,N],[13,"F64x2ConvertSI64x2",E,E,68,N],[13,"F64x2ConvertUI64x2",E,E,68,N],[13,"I32TruncSSatF32",E,E,68,N],[13,"I32TruncUSatF32",E,E,68,N],[13,"I32TruncSSatF64",E,E,68,N],[13,"I32TruncUSatF64",E,E,68,N],[13,"I64TruncSSatF32",E,E,68,N],[13,"I64TruncUSatF32",E,E,68,N],[13,"I64TruncSSatF64",E,E,68,N],[13,"I64TruncUSatF64",E,E,68,N],[4,"LoadKind",E,R[92],N,N],[13,"I32",E,E,69,N],[12,R[94],R[91],E,69,N],[13,"I64",R[88],E,69,N],[12,R[94],R[91],E,69,N],[13,"F32",R[88],E,69,N],[13,"F64",E,E,69,N],[13,"V128",E,E,69,N],[13,"I32_8",E,E,69,N],[12,"kind",R[91],E,69,N],[13,"I32_16",R[88],E,69,N],[12,"kind",R[91],E,69,N],[13,"I64_8",R[88],E,69,N],[12,"kind",R[91],E,69,N],[13,"I64_16",R[88],E,69,N],[12,"kind",R[91],E,69,N],[13,"I64_32",R[88],E,69,N],[12,"kind",R[91],E,69,N],[4,R[266],R[88],R[92],N,N],[13,"I8",E,E,70,N],[13,"I16",E,E,70,N],[13,"I32",E,E,70,N],[13,"I64",E,E,70,N],[4,R[267],E,"The kinds of extended loads which can happen",N,N],[13,"SignExtend",E,E,71,N],[13,"ZeroExtend",E,E,71,N],[13,"ZeroExtendAtomic",E,E,71,N],[4,R[268],E,"The different kinds of store instructions that are part of…",N,N],[13,"I32",E,E,72,N],[12,R[94],R[93],E,72,N],[13,"I64",R[88],E,72,N],[12,R[94],R[93],E,72,N],[13,"F32",R[88],E,72,N],[13,"F64",E,E,72,N],[13,"V128",E,E,72,N],[13,"I32_8",E,E,72,N],[12,R[94],R[93],E,72,N],[13,"I32_16",R[88],E,72,N],[12,R[94],R[93],E,72,N],[13,"I64_8",R[88],E,72,N],[12,R[94],R[93],E,72,N],[13,"I64_16",R[88],E,72,N],[12,R[94],R[93],E,72,N],[13,"I64_32",R[88],E,72,N],[12,R[94],R[93],E,72,N],[4,"AtomicOp",R[88],R[95],N,N],[13,"Add",E,E,73,N],[13,"Sub",E,E,73,N],[13,"And",E,E,73,N],[13,"Or",E,E,73,N],[13,"Xor",E,E,73,N],[13,"Xchg",E,E,73,N],[4,R[269],E,R[95],N,N],[13,"I32",E,E,74,N],[13,"I32_8",E,E,74,N],[13,"I32_16",E,E,74,N],[13,"I64",E,E,74,N],[13,"I64_8",E,E,74,N],[13,"I64_16",E,E,74,N],[13,"I64_32",E,E,74,N],[5,"dfs_in_order",E,"Perform an intra-procedural, depth-first, in-order…",N,[[[R[96]],[R[10]]]]],[5,"dfs_pre_order_mut",E,"Perform an intra-procedural, depth-first, pre-order,…",N,[[[R[96]],[R[10]]]]],[6,"LocalId",E,"The id of a local.",N,N],[6,"InstrSeqId",E,"The identifier for a `InstrSeq` within some `LocalFunction`.",N,N],[6,"ShuffleIndices",E,"Argument in `V128Shuffle` of lane indices to select",N,N],[8,"Visitor",E,"A visitor is a set of callbacks that are called when a…",N,N],[11,"start_instr_seq",E,R[100],75,[[["self"],[R[97]]]]],[11,"end_instr_seq",E,R[101],75,[[["self"],[R[97]]]]],[11,"visit_instr",E,R[102],75,[[["self"],["instr"]]]],[11,"visit_instr_seq_id",E,R[103],75,[[["self"],[R[10]]]]],[11,"visit_local_id",E,"Visit `LocalId`.",75,[[["self"],[R[98]]]]],[11,"visit_memory_id",E,"Visit `MemoryId`.",75,[[["self"],[R[99]]]]],[11,"visit_table_id",E,"Visit `TableId`.",75,[[["self"],[R[186]]]]],[11,"visit_global_id",E,R[104],75,[[["self"],[R[105]]]]],[11,"visit_function_id",E,R[106],75,[[["self"],[R[12]]]]],[11,"visit_data_id",E,R[107],75,[[["self"],["dataid"]]]],[11,"visit_type_id",E,R[108],75,[[["self"],["typeid"]]]],[11,"visit_value",E,R[109],75,[[["self"],["value"]]]],[11,"visit_block",E,R[110],75,[[["self"],["block"]]]],[11,"visit_loop",E,R[111],75,[[["self"],["loop"]]]],[11,"visit_call",E,R[112],75,[[["self"],["call"]]]],[11,"visit_call_indirect",E,R[113],75,[[["self"],[R[114]]]]],[11,"visit_local_get",E,R[115],75,[[["self"],[R[175]]]]],[11,"visit_local_set",E,R[116],75,[[["self"],[R[176]]]]],[11,"visit_local_tee",E,R[117],75,[[["self"],[R[177]]]]],[11,"visit_global_get",E,R[118],75,[[["self"],[R[119]]]]],[11,"visit_global_set",E,R[120],75,[[["self"],[R[121]]]]],[11,"visit_const",E,R[122],75,[[["self"],["const"]]]],[11,"visit_binop",E,R[123],75,[[["self"],["binop"]]]],[11,"visit_unop",E,R[124],75,[[["self"],["unop"]]]],[11,"visit_select",E,R[125],75,[[["self"],["select"]]]],[11,"visit_unreachable",E,R[126],75,[[["self"],[R[127]]]]],[11,"visit_br",E,R[128],75,[[["self"],["br"]]]],[11,"visit_br_if",E,R[129],75,[[["self"],["brif"]]]],[11,"visit_if_else",E,R[130],75,[[["self"],["ifelse"]]]],[11,"visit_br_table",E,R[131],75,[[["self"],[R[178]]]]],[11,"visit_drop",E,R[132],75,[[["self"],["drop"]]]],[11,"visit_return",E,R[133],75,[[["self"],["return"]]]],[11,"visit_memory_size",E,R[134],75,[[["self"],[R[135]]]]],[11,"visit_memory_grow",E,R[136],75,[[["self"],[R[137]]]]],[11,"visit_memory_init",E,R[138],75,[[["self"],[R[139]]]]],[11,"visit_data_drop",E,R[140],75,[[["self"],[R[179]]]]],[11,"visit_memory_copy",E,R[141],75,[[["self"],[R[142]]]]],[11,"visit_memory_fill",E,R[143],75,[[["self"],[R[144]]]]],[11,"visit_load",E,R[145],75,[[["self"],["load"]]]],[11,"visit_store",E,R[146],75,[[["self"],["store"]]]],[11,"visit_atomic_rmw",E,R[147],75,[[["self"],[R[148]]]]],[11,"visit_cmpxchg",E,R[149],75,[[["self"],[R[180]]]]],[11,"visit_atomic_notify",E,R[150],75,[[["self"],[R[151]]]]],[11,"visit_atomic_wait",E,R[152],75,[[["self"],[R[153]]]]],[11,"visit_atomic_fence",E,R[154],75,[[["self"],[R[155]]]]],[11,"visit_table_get",E,R[156],75,[[["self"],[R[181]]]]],[11,"visit_table_set",E,R[157],75,[[["self"],[R[182]]]]],[11,"visit_table_grow",E,R[158],75,[[["self"],[R[159]]]]],[11,"visit_table_size",E,R[160],75,[[["self"],[R[161]]]]],[11,"visit_ref_null",E,R[162],75,[[["self"],[R[183]]]]],[11,"visit_ref_is_null",E,R[163],75,[[["self"],[R[164]]]]],[11,"visit_v128_bitselect",E,R[165],75,[[["self"],[R[166]]]]],[11,"visit_v128_swizzle",E,R[167],75,[[["self"],[R[168]]]]],[11,"visit_v128_shuffle",E,R[169],75,[[["self"],[R[170]]]]],[11,"visit_load_splat",E,R[171],75,[[["self"],[R[172]]]]],[8,R[270],E,"A mutable version of `Visitor`.",N,N],[11,"start_instr_seq_mut",E,R[100],76,[[["self"],[R[97]]]]],[11,"end_instr_seq_mut",E,R[101],76,[[["self"],[R[97]]]]],[11,"visit_instr_mut",E,R[102],76,[[["self"],["instr"]]]],[11,"visit_instr_seq_id_mut",E,R[103],76,[[["self"],[R[10]]]]],[11,"visit_local_id_mut",E,"Visit `Local`.",76,[[["self"],[R[98]]]]],[11,"visit_memory_id_mut",E,"Visit `Memory`.",76,[[["self"],[R[99]]]]],[11,"visit_table_id_mut",E,"Visit `Table`.",76,[[["self"],[R[186]]]]],[11,"visit_global_id_mut",E,R[104],76,[[["self"],[R[105]]]]],[11,"visit_function_id_mut",E,R[106],76,[[["self"],[R[12]]]]],[11,"visit_data_id_mut",E,R[107],76,[[["self"],["dataid"]]]],[11,"visit_type_id_mut",E,R[108],76,[[["self"],["typeid"]]]],[11,"visit_value_mut",E,R[109],76,[[["self"],["value"]]]],[11,"visit_block_mut",E,R[110],76,[[["self"],["block"]]]],[11,"visit_loop_mut",E,R[111],76,[[["self"],["loop"]]]],[11,"visit_call_mut",E,R[112],76,[[["self"],["call"]]]],[11,"visit_call_indirect_mut",E,R[113],76,[[["self"],[R[114]]]]],[11,"visit_local_get_mut",E,R[115],76,[[["self"],[R[175]]]]],[11,"visit_local_set_mut",E,R[116],76,[[["self"],[R[176]]]]],[11,"visit_local_tee_mut",E,R[117],76,[[["self"],[R[177]]]]],[11,"visit_global_get_mut",E,R[118],76,[[["self"],[R[119]]]]],[11,"visit_global_set_mut",E,R[120],76,[[["self"],[R[121]]]]],[11,"visit_const_mut",E,R[122],76,[[["self"],["const"]]]],[11,"visit_binop_mut",E,R[123],76,[[["self"],["binop"]]]],[11,"visit_unop_mut",E,R[124],76,[[["self"],["unop"]]]],[11,"visit_select_mut",E,R[125],76,[[["self"],["select"]]]],[11,"visit_unreachable_mut",E,R[126],76,[[["self"],[R[127]]]]],[11,"visit_br_mut",E,R[128],76,[[["self"],["br"]]]],[11,"visit_br_if_mut",E,R[129],76,[[["self"],["brif"]]]],[11,"visit_if_else_mut",E,R[130],76,[[["self"],["ifelse"]]]],[11,"visit_br_table_mut",E,R[131],76,[[["self"],[R[178]]]]],[11,"visit_drop_mut",E,R[132],76,[[["self"],["drop"]]]],[11,"visit_return_mut",E,R[133],76,[[["self"],["return"]]]],[11,"visit_memory_size_mut",E,R[134],76,[[["self"],[R[135]]]]],[11,"visit_memory_grow_mut",E,R[136],76,[[["self"],[R[137]]]]],[11,"visit_memory_init_mut",E,R[138],76,[[["self"],[R[139]]]]],[11,"visit_data_drop_mut",E,R[140],76,[[["self"],[R[179]]]]],[11,"visit_memory_copy_mut",E,R[141],76,[[["self"],[R[142]]]]],[11,"visit_memory_fill_mut",E,R[143],76,[[["self"],[R[144]]]]],[11,"visit_load_mut",E,R[145],76,[[["self"],["load"]]]],[11,"visit_store_mut",E,R[146],76,[[["self"],["store"]]]],[11,"visit_atomic_rmw_mut",E,R[147],76,[[["self"],[R[148]]]]],[11,"visit_cmpxchg_mut",E,R[149],76,[[["self"],[R[180]]]]],[11,"visit_atomic_notify_mut",E,R[150],76,[[["self"],[R[151]]]]],[11,"visit_atomic_wait_mut",E,R[152],76,[[["self"],[R[153]]]]],[11,"visit_atomic_fence_mut",E,R[154],76,[[["self"],[R[155]]]]],[11,"visit_table_get_mut",E,R[156],76,[[["self"],[R[181]]]]],[11,"visit_table_set_mut",E,R[157],76,[[["self"],[R[182]]]]],[11,"visit_table_grow_mut",E,R[158],76,[[["self"],[R[159]]]]],[11,"visit_table_size_mut",E,R[160],76,[[["self"],[R[161]]]]],[11,"visit_ref_null_mut",E,R[162],76,[[["self"],[R[183]]]]],[11,"visit_ref_is_null_mut",E,R[163],76,[[["self"],[R[164]]]]],[11,"visit_v128_bitselect_mut",E,R[165],76,[[["self"],[R[166]]]]],[11,"visit_v128_swizzle_mut",E,R[167],76,[[["self"],[R[168]]]]],[11,"visit_v128_shuffle_mut",E,R[169],76,[[["self"],[R[170]]]]],[11,"visit_load_splat_mut",E,R[171],76,[[["self"],[R[172]]]]],[11,"new",E,"Construct a new local from the given id and type.",27,[[[R[98]],[R[214]]],["local"]]],[11,"id",E,"Get this local's id that is unique across the whole module.",27,[[["self"]],[R[98]]]],[11,"ty",E,"Get this local's type.",27,[[["self"]],[R[214]]]],[11,"new",E,"Construct a new `InstrSeqType` of the correct form for the…",64,[[[R[173]]],[R[174]]]],[11,"existing",E,"Construct an `InstrSeqType` with a signature that is known…",64,[[[R[173]]],[[R[174]],["option",[R[174]]]]]],[11,"id",E,"Get the id of this instruction sequence.",28,[[["self"]],[R[10]]]],[11,R[196],E,"If this instruction is a `Block`, get an exclusive…",65,[[["self"]],[["option",["block"]],["block"]]]],[11,"is_block",E,"Is this instruction a `Block`?",65,[[["self"]],["bool"]]],[11,"unwrap_block",E,"Get a shared reference to the underlying `Block`.",65,[[["self"]],["block"]]],[11,"unwrap_block_mut",E,"Get an exclusive reference to the underlying `Block`.",65,[[["self"]],["block"]]],[11,"loop_mut",E,"If this instruction is a `Loop`, get an exclusive…",65,[[["self"]],[["loop"],["option",["loop"]]]]],[11,"is_loop",E,"Is this instruction a `Loop`?",65,[[["self"]],["bool"]]],[11,"unwrap_loop",E,"Get a shared reference to the underlying `Loop`.",65,[[["self"]],["loop"]]],[11,"unwrap_loop_mut",E,"Get an exclusive reference to the underlying `Loop`.",65,[[["self"]],["loop"]]],[11,"call_mut",E,"If this instruction is a `Call`, get an exclusive…",65,[[["self"]],[["option",["call"]],["call"]]]],[11,"is_call",E,"Is this instruction a `Call`?",65,[[["self"]],["bool"]]],[11,"unwrap_call",E,"Get a shared reference to the underlying `Call`.",65,[[["self"]],["call"]]],[11,"unwrap_call_mut",E,"Get an exclusive reference to the underlying `Call`.",65,[[["self"]],["call"]]],[11,"call_indirect_mut",E,"If this instruction is a `CallIndirect`, get an exclusive…",65,[[["self"]],[["option",[R[114]]],[R[114]]]]],[11,"is_call_indirect",E,"Is this instruction a `CallIndirect`?",65,[[["self"]],["bool"]]],[11,"unwrap_call_indirect",E,"Get a shared reference to the underlying `CallIndirect`.",65,[[["self"]],[R[114]]]],[11,"unwrap_call_indirect_mut",E,"Get an exclusive reference to the underlying `CallIndirect`.",65,[[["self"]],[R[114]]]],[11,"local_get_mut",E,"If this instruction is a `LocalGet`, get an exclusive…",65,[[["self"]],[["option",[R[175]]],[R[175]]]]],[11,"is_local_get",E,"Is this instruction a `LocalGet`?",65,[[["self"]],["bool"]]],[11,"unwrap_local_get",E,"Get a shared reference to the underlying `LocalGet`.",65,[[["self"]],[R[175]]]],[11,"unwrap_local_get_mut",E,"Get an exclusive reference to the underlying `LocalGet`.",65,[[["self"]],[R[175]]]],[11,"local_set_mut",E,"If this instruction is a `LocalSet`, get an exclusive…",65,[[["self"]],[[R[176]],["option",[R[176]]]]]],[11,"is_local_set",E,"Is this instruction a `LocalSet`?",65,[[["self"]],["bool"]]],[11,"unwrap_local_set",E,"Get a shared reference to the underlying `LocalSet`.",65,[[["self"]],[R[176]]]],[11,"unwrap_local_set_mut",E,"Get an exclusive reference to the underlying `LocalSet`.",65,[[["self"]],[R[176]]]],[11,"local_tee_mut",E,"If this instruction is a `LocalTee`, get an exclusive…",65,[[["self"]],[["option",[R[177]]],[R[177]]]]],[11,"is_local_tee",E,"Is this instruction a `LocalTee`?",65,[[["self"]],["bool"]]],[11,"unwrap_local_tee",E,"Get a shared reference to the underlying `LocalTee`.",65,[[["self"]],[R[177]]]],[11,"unwrap_local_tee_mut",E,"Get an exclusive reference to the underlying `LocalTee`.",65,[[["self"]],[R[177]]]],[11,"global_get_mut",E,"If this instruction is a `GlobalGet`, get an exclusive…",65,[[["self"]],[["option",[R[119]]],[R[119]]]]],[11,"is_global_get",E,"Is this instruction a `GlobalGet`?",65,[[["self"]],["bool"]]],[11,"unwrap_global_get",E,"Get a shared reference to the underlying `GlobalGet`.",65,[[["self"]],[R[119]]]],[11,"unwrap_global_get_mut",E,"Get an exclusive reference to the underlying `GlobalGet`.",65,[[["self"]],[R[119]]]],[11,"global_set_mut",E,"If this instruction is a `GlobalSet`, get an exclusive…",65,[[["self"]],[[R[121]],["option",[R[121]]]]]],[11,"is_global_set",E,"Is this instruction a `GlobalSet`?",65,[[["self"]],["bool"]]],[11,"unwrap_global_set",E,"Get a shared reference to the underlying `GlobalSet`.",65,[[["self"]],[R[121]]]],[11,"unwrap_global_set_mut",E,"Get an exclusive reference to the underlying `GlobalSet`.",65,[[["self"]],[R[121]]]],[11,"const_mut",E,"If this instruction is a `Const`, get an exclusive…",65,[[["self"]],[["const"],["option",["const"]]]]],[11,"is_const",E,"Is this instruction a `Const`?",65,[[["self"]],["bool"]]],[11,"unwrap_const",E,"Get a shared reference to the underlying `Const`.",65,[[["self"]],["const"]]],[11,"unwrap_const_mut",E,"Get an exclusive reference to the underlying `Const`.",65,[[["self"]],["const"]]],[11,"binop_mut",E,"If this instruction is a `Binop`, get an exclusive…",65,[[["self"]],[["option",["binop"]],["binop"]]]],[11,"is_binop",E,"Is this instruction a `Binop`?",65,[[["self"]],["bool"]]],[11,"unwrap_binop",E,"Get a shared reference to the underlying `Binop`.",65,[[["self"]],["binop"]]],[11,"unwrap_binop_mut",E,"Get an exclusive reference to the underlying `Binop`.",65,[[["self"]],["binop"]]],[11,"unop_mut",E,"If this instruction is a `Unop`, get an exclusive…",65,[[["self"]],[["option",["unop"]],["unop"]]]],[11,"is_unop",E,"Is this instruction a `Unop`?",65,[[["self"]],["bool"]]],[11,"unwrap_unop",E,"Get a shared reference to the underlying `Unop`.",65,[[["self"]],["unop"]]],[11,"unwrap_unop_mut",E,"Get an exclusive reference to the underlying `Unop`.",65,[[["self"]],["unop"]]],[11,"select_mut",E,"If this instruction is a `Select`, get an exclusive…",65,[[["self"]],[["select"],["option",["select"]]]]],[11,"is_select",E,"Is this instruction a `Select`?",65,[[["self"]],["bool"]]],[11,"unwrap_select",E,"Get a shared reference to the underlying `Select`.",65,[[["self"]],["select"]]],[11,"unwrap_select_mut",E,"Get an exclusive reference to the underlying `Select`.",65,[[["self"]],["select"]]],[11,"unreachable_mut",E,"If this instruction is a `Unreachable`, get an exclusive…",65,[[["self"]],[["option",[R[127]]],[R[127]]]]],[11,"is_unreachable",E,"Is this instruction a `Unreachable`?",65,[[["self"]],["bool"]]],[11,"unwrap_unreachable",E,"Get a shared reference to the underlying `Unreachable`.",65,[[["self"]],[R[127]]]],[11,"unwrap_unreachable_mut",E,"Get an exclusive reference to the underlying `Unreachable`.",65,[[["self"]],[R[127]]]],[11,"br_mut",E,"If this instruction is a `Br`, get an exclusive reference…",65,[[["self"]],[["option",["br"]],["br"]]]],[11,"is_br",E,"Is this instruction a `Br`?",65,[[["self"]],["bool"]]],[11,"unwrap_br",E,"Get a shared reference to the underlying `Br`.",65,[[["self"]],["br"]]],[11,"unwrap_br_mut",E,"Get an exclusive reference to the underlying `Br`.",65,[[["self"]],["br"]]],[11,"br_if_mut",E,"If this instruction is a `BrIf`, get an exclusive…",65,[[["self"]],[["brif"],["option",["brif"]]]]],[11,"is_br_if",E,"Is this instruction a `BrIf`?",65,[[["self"]],["bool"]]],[11,"unwrap_br_if",E,"Get a shared reference to the underlying `BrIf`.",65,[[["self"]],["brif"]]],[11,"unwrap_br_if_mut",E,"Get an exclusive reference to the underlying `BrIf`.",65,[[["self"]],["brif"]]],[11,"if_else_mut",E,"If this instruction is a `IfElse`, get an exclusive…",65,[[["self"]],[["option",["ifelse"]],["ifelse"]]]],[11,"is_if_else",E,"Is this instruction a `IfElse`?",65,[[["self"]],["bool"]]],[11,"unwrap_if_else",E,"Get a shared reference to the underlying `IfElse`.",65,[[["self"]],["ifelse"]]],[11,"unwrap_if_else_mut",E,"Get an exclusive reference to the underlying `IfElse`.",65,[[["self"]],["ifelse"]]],[11,"br_table_mut",E,"If this instruction is a `BrTable`, get an exclusive…",65,[[["self"]],[[R[178]],["option",[R[178]]]]]],[11,"is_br_table",E,"Is this instruction a `BrTable`?",65,[[["self"]],["bool"]]],[11,"unwrap_br_table",E,"Get a shared reference to the underlying `BrTable`.",65,[[["self"]],[R[178]]]],[11,"unwrap_br_table_mut",E,"Get an exclusive reference to the underlying `BrTable`.",65,[[["self"]],[R[178]]]],[11,"drop_mut",E,"If this instruction is a `Drop`, get an exclusive…",65,[[["self"]],[["drop"],["option",["drop"]]]]],[11,"is_drop",E,"Is this instruction a `Drop`?",65,[[["self"]],["bool"]]],[11,"unwrap_drop",E,"Get a shared reference to the underlying `Drop`.",65,[[["self"]],["drop"]]],[11,"unwrap_drop_mut",E,"Get an exclusive reference to the underlying `Drop`.",65,[[["self"]],["drop"]]],[11,"return_mut",E,"If this instruction is a `Return`, get an exclusive…",65,[[["self"]],[["return"],["option",["return"]]]]],[11,"is_return",E,"Is this instruction a `Return`?",65,[[["self"]],["bool"]]],[11,"unwrap_return",E,"Get a shared reference to the underlying `Return`.",65,[[["self"]],["return"]]],[11,"unwrap_return_mut",E,"Get an exclusive reference to the underlying `Return`.",65,[[["self"]],["return"]]],[11,"memory_size_mut",E,"If this instruction is a `MemorySize`, get an exclusive…",65,[[["self"]],[[R[135]],["option",[R[135]]]]]],[11,"is_memory_size",E,"Is this instruction a `MemorySize`?",65,[[["self"]],["bool"]]],[11,"unwrap_memory_size",E,"Get a shared reference to the underlying `MemorySize`.",65,[[["self"]],[R[135]]]],[11,"unwrap_memory_size_mut",E,"Get an exclusive reference to the underlying `MemorySize`.",65,[[["self"]],[R[135]]]],[11,"memory_grow_mut",E,"If this instruction is a `MemoryGrow`, get an exclusive…",65,[[["self"]],[["option",[R[137]]],[R[137]]]]],[11,"is_memory_grow",E,"Is this instruction a `MemoryGrow`?",65,[[["self"]],["bool"]]],[11,"unwrap_memory_grow",E,"Get a shared reference to the underlying `MemoryGrow`.",65,[[["self"]],[R[137]]]],[11,"unwrap_memory_grow_mut",E,"Get an exclusive reference to the underlying `MemoryGrow`.",65,[[["self"]],[R[137]]]],[11,"memory_init_mut",E,"If this instruction is a `MemoryInit`, get an exclusive…",65,[[["self"]],[["option",[R[139]]],[R[139]]]]],[11,"is_memory_init",E,"Is this instruction a `MemoryInit`?",65,[[["self"]],["bool"]]],[11,"unwrap_memory_init",E,"Get a shared reference to the underlying `MemoryInit`.",65,[[["self"]],[R[139]]]],[11,"unwrap_memory_init_mut",E,"Get an exclusive reference to the underlying `MemoryInit`.",65,[[["self"]],[R[139]]]],[11,"data_drop_mut",E,"If this instruction is a `DataDrop`, get an exclusive…",65,[[["self"]],[[R[179]],["option",[R[179]]]]]],[11,"is_data_drop",E,"Is this instruction a `DataDrop`?",65,[[["self"]],["bool"]]],[11,"unwrap_data_drop",E,"Get a shared reference to the underlying `DataDrop`.",65,[[["self"]],[R[179]]]],[11,"unwrap_data_drop_mut",E,"Get an exclusive reference to the underlying `DataDrop`.",65,[[["self"]],[R[179]]]],[11,"memory_copy_mut",E,"If this instruction is a `MemoryCopy`, get an exclusive…",65,[[["self"]],[[R[142]],["option",[R[142]]]]]],[11,"is_memory_copy",E,"Is this instruction a `MemoryCopy`?",65,[[["self"]],["bool"]]],[11,"unwrap_memory_copy",E,"Get a shared reference to the underlying `MemoryCopy`.",65,[[["self"]],[R[142]]]],[11,"unwrap_memory_copy_mut",E,"Get an exclusive reference to the underlying `MemoryCopy`.",65,[[["self"]],[R[142]]]],[11,"memory_fill_mut",E,"If this instruction is a `MemoryFill`, get an exclusive…",65,[[["self"]],[["option",[R[144]]],[R[144]]]]],[11,"is_memory_fill",E,"Is this instruction a `MemoryFill`?",65,[[["self"]],["bool"]]],[11,"unwrap_memory_fill",E,"Get a shared reference to the underlying `MemoryFill`.",65,[[["self"]],[R[144]]]],[11,"unwrap_memory_fill_mut",E,"Get an exclusive reference to the underlying `MemoryFill`.",65,[[["self"]],[R[144]]]],[11,"load_mut",E,"If this instruction is a `Load`, get an exclusive…",65,[[["self"]],[["option",["load"]],["load"]]]],[11,"is_load",E,"Is this instruction a `Load`?",65,[[["self"]],["bool"]]],[11,"unwrap_load",E,"Get a shared reference to the underlying `Load`.",65,[[["self"]],["load"]]],[11,"unwrap_load_mut",E,"Get an exclusive reference to the underlying `Load`.",65,[[["self"]],["load"]]],[11,"store_mut",E,"If this instruction is a `Store`, get an exclusive…",65,[[["self"]],[["option",["store"]],["store"]]]],[11,"is_store",E,"Is this instruction a `Store`?",65,[[["self"]],["bool"]]],[11,"unwrap_store",E,"Get a shared reference to the underlying `Store`.",65,[[["self"]],["store"]]],[11,"unwrap_store_mut",E,"Get an exclusive reference to the underlying `Store`.",65,[[["self"]],["store"]]],[11,"atomic_rmw_mut",E,"If this instruction is a `AtomicRmw`, get an exclusive…",65,[[["self"]],[["option",[R[148]]],[R[148]]]]],[11,"is_atomic_rmw",E,"Is this instruction a `AtomicRmw`?",65,[[["self"]],["bool"]]],[11,"unwrap_atomic_rmw",E,"Get a shared reference to the underlying `AtomicRmw`.",65,[[["self"]],[R[148]]]],[11,"unwrap_atomic_rmw_mut",E,"Get an exclusive reference to the underlying `AtomicRmw`.",65,[[["self"]],[R[148]]]],[11,"cmpxchg_mut",E,"If this instruction is a `Cmpxchg`, get an exclusive…",65,[[["self"]],[["option",[R[180]]],[R[180]]]]],[11,"is_cmpxchg",E,"Is this instruction a `Cmpxchg`?",65,[[["self"]],["bool"]]],[11,"unwrap_cmpxchg",E,"Get a shared reference to the underlying `Cmpxchg`.",65,[[["self"]],[R[180]]]],[11,"unwrap_cmpxchg_mut",E,"Get an exclusive reference to the underlying `Cmpxchg`.",65,[[["self"]],[R[180]]]],[11,"atomic_notify_mut",E,"If this instruction is a `AtomicNotify`, get an exclusive…",65,[[["self"]],[["option",[R[151]]],[R[151]]]]],[11,"is_atomic_notify",E,"Is this instruction a `AtomicNotify`?",65,[[["self"]],["bool"]]],[11,"unwrap_atomic_notify",E,"Get a shared reference to the underlying `AtomicNotify`.",65,[[["self"]],[R[151]]]],[11,"unwrap_atomic_notify_mut",E,"Get an exclusive reference to the underlying `AtomicNotify`.",65,[[["self"]],[R[151]]]],[11,"atomic_wait_mut",E,"If this instruction is a `AtomicWait`, get an exclusive…",65,[[["self"]],[["option",[R[153]]],[R[153]]]]],[11,"is_atomic_wait",E,"Is this instruction a `AtomicWait`?",65,[[["self"]],["bool"]]],[11,"unwrap_atomic_wait",E,"Get a shared reference to the underlying `AtomicWait`.",65,[[["self"]],[R[153]]]],[11,"unwrap_atomic_wait_mut",E,"Get an exclusive reference to the underlying `AtomicWait`.",65,[[["self"]],[R[153]]]],[11,"atomic_fence_mut",E,"If this instruction is a `AtomicFence`, get an exclusive…",65,[[["self"]],[["option",[R[155]]],[R[155]]]]],[11,"is_atomic_fence",E,"Is this instruction a `AtomicFence`?",65,[[["self"]],["bool"]]],[11,"unwrap_atomic_fence",E,"Get a shared reference to the underlying `AtomicFence`.",65,[[["self"]],[R[155]]]],[11,"unwrap_atomic_fence_mut",E,"Get an exclusive reference to the underlying `AtomicFence`.",65,[[["self"]],[R[155]]]],[11,"table_get_mut",E,"If this instruction is a `TableGet`, get an exclusive…",65,[[["self"]],[["option",[R[181]]],[R[181]]]]],[11,"is_table_get",E,"Is this instruction a `TableGet`?",65,[[["self"]],["bool"]]],[11,"unwrap_table_get",E,"Get a shared reference to the underlying `TableGet`.",65,[[["self"]],[R[181]]]],[11,"unwrap_table_get_mut",E,"Get an exclusive reference to the underlying `TableGet`.",65,[[["self"]],[R[181]]]],[11,"table_set_mut",E,"If this instruction is a `TableSet`, get an exclusive…",65,[[["self"]],[["option",[R[182]]],[R[182]]]]],[11,"is_table_set",E,"Is this instruction a `TableSet`?",65,[[["self"]],["bool"]]],[11,"unwrap_table_set",E,"Get a shared reference to the underlying `TableSet`.",65,[[["self"]],[R[182]]]],[11,"unwrap_table_set_mut",E,"Get an exclusive reference to the underlying `TableSet`.",65,[[["self"]],[R[182]]]],[11,"table_grow_mut",E,"If this instruction is a `TableGrow`, get an exclusive…",65,[[["self"]],[[R[159]],["option",[R[159]]]]]],[11,"is_table_grow",E,"Is this instruction a `TableGrow`?",65,[[["self"]],["bool"]]],[11,"unwrap_table_grow",E,"Get a shared reference to the underlying `TableGrow`.",65,[[["self"]],[R[159]]]],[11,"unwrap_table_grow_mut",E,"Get an exclusive reference to the underlying `TableGrow`.",65,[[["self"]],[R[159]]]],[11,"table_size_mut",E,"If this instruction is a `TableSize`, get an exclusive…",65,[[["self"]],[["option",[R[161]]],[R[161]]]]],[11,"is_table_size",E,"Is this instruction a `TableSize`?",65,[[["self"]],["bool"]]],[11,"unwrap_table_size",E,"Get a shared reference to the underlying `TableSize`.",65,[[["self"]],[R[161]]]],[11,"unwrap_table_size_mut",E,"Get an exclusive reference to the underlying `TableSize`.",65,[[["self"]],[R[161]]]],[11,"ref_null_mut",E,"If this instruction is a `RefNull`, get an exclusive…",65,[[["self"]],[[R[183]],["option",[R[183]]]]]],[11,"is_ref_null",E,"Is this instruction a `RefNull`?",65,[[["self"]],["bool"]]],[11,"unwrap_ref_null",E,"Get a shared reference to the underlying `RefNull`.",65,[[["self"]],[R[183]]]],[11,"unwrap_ref_null_mut",E,"Get an exclusive reference to the underlying `RefNull`.",65,[[["self"]],[R[183]]]],[11,"ref_is_null_mut",E,"If this instruction is a `RefIsNull`, get an exclusive…",65,[[["self"]],[[R[164]],["option",[R[164]]]]]],[11,"is_ref_is_null",E,"Is this instruction a `RefIsNull`?",65,[[["self"]],["bool"]]],[11,"unwrap_ref_is_null",E,"Get a shared reference to the underlying `RefIsNull`.",65,[[["self"]],[R[164]]]],[11,"unwrap_ref_is_null_mut",E,"Get an exclusive reference to the underlying `RefIsNull`.",65,[[["self"]],[R[164]]]],[11,"v128_bitselect_mut",E,"If this instruction is a `V128Bitselect`, get an exclusive…",65,[[["self"]],[["option",[R[166]]],[R[166]]]]],[11,"is_v128_bitselect",E,"Is this instruction a `V128Bitselect`?",65,[[["self"]],["bool"]]],[11,"unwrap_v128_bitselect",E,"Get a shared reference to the underlying `V128Bitselect`.",65,[[["self"]],[R[166]]]],[11,"unwrap_v128_bitselect_mut",E,"Get an exclusive reference to the underlying…",65,[[["self"]],[R[166]]]],[11,"v128_swizzle_mut",E,"If this instruction is a `V128Swizzle`, get an exclusive…",65,[[["self"]],[[R[168]],["option",[R[168]]]]]],[11,"is_v128_swizzle",E,"Is this instruction a `V128Swizzle`?",65,[[["self"]],["bool"]]],[11,"unwrap_v128_swizzle",E,"Get a shared reference to the underlying `V128Swizzle`.",65,[[["self"]],[R[168]]]],[11,"unwrap_v128_swizzle_mut",E,"Get an exclusive reference to the underlying `V128Swizzle`.",65,[[["self"]],[R[168]]]],[11,"v128_shuffle_mut",E,"If this instruction is a `V128Shuffle`, get an exclusive…",65,[[["self"]],[[R[170]],["option",[R[170]]]]]],[11,"is_v128_shuffle",E,"Is this instruction a `V128Shuffle`?",65,[[["self"]],["bool"]]],[11,"unwrap_v128_shuffle",E,"Get a shared reference to the underlying `V128Shuffle`.",65,[[["self"]],[R[170]]]],[11,"unwrap_v128_shuffle_mut",E,"Get an exclusive reference to the underlying `V128Shuffle`.",65,[[["self"]],[R[170]]]],[11,"load_splat_mut",E,"If this instruction is a `LoadSplat`, get an exclusive…",65,[[["self"]],[["option",[R[172]]],[R[172]]]]],[11,"is_load_splat",E,"Is this instruction a `LoadSplat`?",65,[[["self"]],["bool"]]],[11,"unwrap_load_splat",E,"Get a shared reference to the underlying `LoadSplat`.",65,[[["self"]],[R[172]]]],[11,"unwrap_load_splat_mut",E,"Get an exclusive reference to the underlying `LoadSplat`.",65,[[["self"]],[R[172]]]],[11,"call","walrus","Push a new `Call` instruction onto this builder's block.",26,[[["self"],[R[12]]],["self"]]],[11,"call_at",E,"Splice a new `Call` instruction into this builder's block…",26,[[["self"],[R[12]],["usize"]],["self"]]],[11,"call_indirect",E,"Push a new `CallIndirect` instruction onto this builder's…",26,[[["self"],["typeid"],[R[186]]],["self"]]],[11,"call_indirect_at",E,"Splice a new `CallIndirect` instruction into this…",26,[[["self"],["typeid"],["usize"],[R[186]]],["self"]]],[11,"local_get",E,"Push a new `LocalGet` instruction onto this builder's block.",26,[[["self"],[R[98]]],["self"]]],[11,"local_get_at",E,"Splice a new `LocalGet` instruction into this builder's…",26,[[["self"],[R[98]],["usize"]],["self"]]],[11,"local_set",E,"Push a new `LocalSet` instruction onto this builder's block.",26,[[["self"],[R[98]]],["self"]]],[11,"local_set_at",E,"Splice a new `LocalSet` instruction into this builder's…",26,[[["self"],[R[98]],["usize"]],["self"]]],[11,"local_tee",E,"Push a new `LocalTee` instruction onto this builder's block.",26,[[["self"],[R[98]]],["self"]]],[11,"local_tee_at",E,"Splice a new `LocalTee` instruction into this builder's…",26,[[["self"],[R[98]],["usize"]],["self"]]],[11,"global_get",E,"Push a new `GlobalGet` instruction onto this builder's…",26,[[["self"],[R[105]]],["self"]]],[11,"global_get_at",E,"Splice a new `GlobalGet` instruction into this builder's…",26,[[["self"],["usize"],[R[105]]],["self"]]],[11,"global_set",E,"Push a new `GlobalSet` instruction onto this builder's…",26,[[["self"],[R[105]]],["self"]]],[11,"global_set_at",E,"Splice a new `GlobalSet` instruction into this builder's…",26,[[["self"],["usize"],[R[105]]],["self"]]],[11,"const_",E,"Push a new `Const` instruction onto this builder's block.",26,[[["self"],["value"]],["self"]]],[11,"const_at",E,"Splice a new `Const` instruction into this builder's block…",26,[[["self"],["usize"],["value"]],["self"]]],[11,"binop",E,"Push a new `Binop` instruction onto this builder's block.",26,[[["self"],[R[238]]],["self"]]],[11,"binop_at",E,"Splice a new `Binop` instruction into this builder's block…",26,[[["self"],[R[238]],["usize"]],["self"]]],[11,"unop",E,"Push a new `Unop` instruction onto this builder's block.",26,[[["self"],["unaryop"]],["self"]]],[11,"unop_at",E,"Splice a new `Unop` instruction into this builder's block…",26,[[["self"],["usize"],["unaryop"]],["self"]]],[11,"select",E,"Push a new `Select` instruction onto this builder's block.",26,[[["self"]],["self"]]],[11,"select_at",E,"Splice a new `Select` instruction into this builder's…",26,[[["self"],["usize"]],["self"]]],[11,R[127],E,"Push a new `Unreachable` instruction onto this builder's…",26,[[["self"]],["self"]]],[11,"unreachable_at",E,"Splice a new `Unreachable` instruction into this builder's…",26,[[["self"],["usize"]],["self"]]],[11,"br",E,"Push a new `Br` instruction onto this builder's block.",26,[[["self"],[R[10]]],["self"]]],[11,"br_at",E,"Splice a new `Br` instruction into this builder's block at…",26,[[["self"],[R[10]],["usize"]],["self"]]],[11,"br_if",E,"Push a new `BrIf` instruction onto this builder's block.",26,[[["self"],[R[10]]],["self"]]],[11,"br_if_at",E,"Splice a new `BrIf` instruction into this builder's block…",26,[[["self"],[R[10]],["usize"]],["self"]]],[11,"br_table",E,"Push a new `BrTable` instruction onto this builder's block.",26,[[["self"],["box"],[R[10]]],["self"]]],[11,"br_table_at",E,"Splice a new `BrTable` instruction into this builder's…",26,[[["self"],["usize"],["box"],[R[10]]],["self"]]],[11,"drop",E,"Push a new `Drop` instruction onto this builder's block.",26,[[["self"]],["self"]]],[11,"drop_at",E,"Splice a new `Drop` instruction into this builder's block…",26,[[["self"],["usize"]],["self"]]],[11,"return_",E,"Push a new `Return` instruction onto this builder's block.",26,[[["self"]],["self"]]],[11,"return_at",E,"Splice a new `Return` instruction into this builder's…",26,[[["self"],["usize"]],["self"]]],[11,"memory_size",E,"Push a new `MemorySize` instruction onto this builder's…",26,[[["self"],[R[99]]],["self"]]],[11,"memory_size_at",E,"Splice a new `MemorySize` instruction into this builder's…",26,[[["self"],[R[99]],["usize"]],["self"]]],[11,"memory_grow",E,"Push a new `MemoryGrow` instruction onto this builder's…",26,[[["self"],[R[99]]],["self"]]],[11,"memory_grow_at",E,"Splice a new `MemoryGrow` instruction into this builder's…",26,[[["self"],[R[99]],["usize"]],["self"]]],[11,"memory_init",E,"Push a new `MemoryInit` instruction onto this builder's…",26,[[["self"],[R[99]],["dataid"]],["self"]]],[11,"memory_init_at",E,"Splice a new `MemoryInit` instruction into this builder's…",26,[[["self"],[R[99]],["usize"],["dataid"]],["self"]]],[11,"data_drop",E,"Push a new `DataDrop` instruction onto this builder's block.",26,[[["self"],["dataid"]],["self"]]],[11,"data_drop_at",E,"Splice a new `DataDrop` instruction into this builder's…",26,[[["self"],["usize"],["dataid"]],["self"]]],[11,"memory_copy",E,"Push a new `MemoryCopy` instruction onto this builder's…",26,[[["self"],[R[99]]],["self"]]],[11,"memory_copy_at",E,"Splice a new `MemoryCopy` instruction into this builder's…",26,[[["self"],[R[99]],["usize"]],["self"]]],[11,"memory_fill",E,"Push a new `MemoryFill` instruction onto this builder's…",26,[[["self"],[R[99]]],["self"]]],[11,"memory_fill_at",E,"Splice a new `MemoryFill` instruction into this builder's…",26,[[["self"],[R[99]],["usize"]],["self"]]],[11,"load",E,"Push a new `Load` instruction onto this builder's block.",26,[[["self"],[R[99]],[R[239]],["memarg"]],["self"]]],[11,"load_at",E,"Splice a new `Load` instruction into this builder's block…",26,[[["self"],[R[99]],["usize"],[R[239]],["memarg"]],["self"]]],[11,"store",E,"Push a new `Store` instruction onto this builder's block.",26,[[["self"],[R[99]],[R[184]],["memarg"]],["self"]]],[11,"store_at",E,"Splice a new `Store` instruction into this builder's block…",26,[[["self"],[R[99]],["usize"],[R[184]],["memarg"]],["self"]]],[11,"atomic_rmw",E,"Push a new `AtomicRmw` instruction onto this builder's…",26,[[["self"],[R[99]],["memarg"],[R[185]],[R[240]]],["self"]]],[11,"atomic_rmw_at",E,"Splice a new `AtomicRmw` instruction into this builder's…",26,[[["self"],[R[99]],["usize"],["memarg"],[R[185]],[R[240]]],["self"]]],[11,R[180],E,"Push a new `Cmpxchg` instruction onto this builder's block.",26,[[["self"],[R[99]],["memarg"],[R[185]]],["self"]]],[11,"cmpxchg_at",E,"Splice a new `Cmpxchg` instruction into this builder's…",26,[[["self"],[R[99]],["usize"],["memarg"],[R[185]]],["self"]]],[11,"atomic_notify",E,"Push a new `AtomicNotify` instruction onto this builder's…",26,[[["self"],[R[99]],["memarg"]],["self"]]],[11,"atomic_notify_at",E,"Splice a new `AtomicNotify` instruction into this…",26,[[["self"],[R[99]],["usize"],["memarg"]],["self"]]],[11,"atomic_wait",E,"Push a new `AtomicWait` instruction onto this builder's…",26,[[["self"],[R[99]],["memarg"],["bool"]],["self"]]],[11,"atomic_wait_at",E,"Splice a new `AtomicWait` instruction into this builder's…",26,[[["self"],[R[99]],["usize"],["memarg"],["bool"]],["self"]]],[11,"atomic_fence",E,"Push a new `AtomicFence` instruction onto this builder's…",26,[[["self"]],["self"]]],[11,"atomic_fence_at",E,"Splice a new `AtomicFence` instruction into this builder's…",26,[[["self"],["usize"]],["self"]]],[11,"table_get",E,"Push a new `TableGet` instruction onto this builder's block.",26,[[["self"],[R[186]]],["self"]]],[11,"table_get_at",E,"Splice a new `TableGet` instruction into this builder's…",26,[[["self"],["usize"],[R[186]]],["self"]]],[11,"table_set",E,"Push a new `TableSet` instruction onto this builder's block.",26,[[["self"],[R[186]]],["self"]]],[11,"table_set_at",E,"Splice a new `TableSet` instruction into this builder's…",26,[[["self"],["usize"],[R[186]]],["self"]]],[11,"table_grow",E,"Push a new `TableGrow` instruction onto this builder's…",26,[[["self"],[R[186]]],["self"]]],[11,"table_grow_at",E,"Splice a new `TableGrow` instruction into this builder's…",26,[[["self"],["usize"],[R[186]]],["self"]]],[11,"table_size",E,"Push a new `TableSize` instruction onto this builder's…",26,[[["self"],[R[186]]],["self"]]],[11,"table_size_at",E,"Splice a new `TableSize` instruction into this builder's…",26,[[["self"],["usize"],[R[186]]],["self"]]],[11,"ref_null",E,"Push a new `RefNull` instruction onto this builder's block.",26,[[["self"]],["self"]]],[11,"ref_null_at",E,"Splice a new `RefNull` instruction into this builder's…",26,[[["self"],["usize"]],["self"]]],[11,"ref_is_null",E,"Push a new `RefIsNull` instruction onto this builder's…",26,[[["self"]],["self"]]],[11,"ref_is_null_at",E,"Splice a new `RefIsNull` instruction into this builder's…",26,[[["self"],["usize"]],["self"]]],[11,"v128_bitselect",E,"Push a new `V128Bitselect` instruction onto this builder's…",26,[[["self"]],["self"]]],[11,"v128_bitselect_at",E,"Splice a new `V128Bitselect` instruction into this…",26,[[["self"],["usize"]],["self"]]],[11,"v128_swizzle",E,"Push a new `V128Swizzle` instruction onto this builder's…",26,[[["self"]],["self"]]],[11,"v128_swizzle_at",E,"Splice a new `V128Swizzle` instruction into this builder's…",26,[[["self"],["usize"]],["self"]]],[11,"v128_shuffle",E,"Push a new `V128Shuffle` instruction onto this builder's…",26,[[["self"],[R[187]]],["self"]]],[11,"v128_shuffle_at",E,"Splice a new `V128Shuffle` instruction into this builder's…",26,[[["self"],[R[187]],["usize"]],["self"]]],[11,"load_splat",E,"Push a new `LoadSplat` instruction onto this builder's…",26,[[["self"],[R[99]],[R[188]],["memarg"]],["self"]]],[11,"load_splat_at",E,"Splice a new `LoadSplat` instruction into this builder's…",26,[[["self"],[R[99]],["usize"],[R[188]],["memarg"]],["self"]]],[11,"width",R[88],"Returns the number of bytes loaded",69,[[["self"]],["u32"]]],[11,R[94],E,"Returns if this is an atomic load",69,[[["self"]],["bool"]]],[11,R[94],E,"Returns whether this is an atomic extended load",71,[[["self"]],["bool"]]],[11,"width",E,"Returns the number of bytes stored",72,[[["self"]],["u32"]]],[11,R[94],E,"Returns whether this is an atomic store",72,[[["self"]],["bool"]]],[11,"bytes",E,"Returns the size, in bytes, of this atomic operation",74,[[["self"]],["u32"]]],[11,"following_instructions_are_unreachable",E,"Are any instructions that follow this instruction's…",65,[[["self"]],["bool"]]],[11,"new","walrus","Creates a fresh new configuration with default settings.",77,[[],[R[189]]]],[11,"generate_dwarf",E,"Sets a flag to whether DWARF debug sections are generated…",77,[[["self"],["bool"]],[R[189]]]],[11,"generate_name_section",E,"Sets a flag to whether the custom \"name\" section is…",77,[[["self"],["bool"]],[R[189]]]],[11,"generate_synthetic_names_for_anonymous_items",E,"Sets a flag to whether synthetic debugging names are…",77,[[["self"],["bool"]],[R[189]]]],[11,"strict_validate",E,"Indicates whether the module, after parsing, performs…",77,[[["self"],["bool"]],[R[189]]]],[11,"generate_producers_section",E,"Indicates whether the module will have the \"producers\"…",77,[[["self"],["bool"]],[R[189]]]],[11,"only_stable_features",E,"Indicates whether this module is allowed to use only…",77,[[["self"],["bool"]],[R[189]]]],[11,"on_parse",E,"Provide a function that is invoked after successfully…",77,[[["self"],["f"]],[R[189]]]],[11,"parse",E,"Parses an in-memory WebAssembly file into a `Module` using…",77,[[["self"]],[["result",["module"]],["module"]]]],[11,"parse_file",E,"Parses a WebAssembly file into a `Module` using this…",77,[[["self"],["p"]],[["result",["module"]],["module"]]]],[11,"add",E,"Add a new custom section to the module.",78,[[["self"],[T]],[R[247]]]],[11,"delete",E,"Remove a custom section from the module.",78,[[["self"],["i"]],[["box"],["option",["box"]]]]],[11,"remove_raw",E,"Take a raw, unparsed custom section out of this module.",78,[[["self"],["str"]],[["option",[R[190]]],[R[190]]]]],[11,"get",E,"Try and get a shared reference to a custom section that is…",78,[[["self"],[T]],["option"]]],[11,R[210],E,"Try and get an exclusive reference to a custom section…",78,[[["self"],[T]],["option"]]],[11,"iter",E,"Iterate over shared references to custom sections and…",78,[[["self"]]]],[11,R[206],E,"Iterate over exclusive references to custom sections and…",78,[[["self"]]]],[11,"delete_typed",E,"Remove a custom section (by type) from the module.",78,[[["self"]],[["option",["box"]],["box"]]]],[11,"get_typed",E,"Get a shared reference to a custom section, by type.",78,[[["self"]],[["option"],[T]]]],[11,"get_typed_mut",E,"Get a mutable reference to a custom section, by type.",78,[[["self"]],[["option"],[T]]]],[11,"id",E,"Returns the id of this passive data segment",2,[[["self"]],["dataid"]]],[11,"is_passive",E,"Is this a passive data segment?",2,[[["self"]],["bool"]]],[11,"get",E,R[191],79,[[["self"],["dataid"]],["data"]]],[11,R[210],E,R[191],79,[[["self"],["dataid"]],["data"]]],[11,"delete",E,"Delete a passive data segment from this module.",79,[[["self"],["dataid"]]]],[11,"iter",E,R[193],79,[[["self"]]]],[11,"id",E,"Get this segment's id",3,[[["self"]],[["id",["element"]],["element"]]]],[11,"get",E,R[191],80,[[["self"],[R[192]]],["element"]]],[11,R[210],E,R[191],80,[[["self"],[R[192]]],["element"]]],[11,"delete",E,"Delete an elements entry from this module.",80,[[["self"],[R[192]]]]],[11,"iter",E,R[193],80,[[["self"]]]],[11,"id",E,"Returns the id of this export",4,[[["self"]],[R[195]]]],[11,"get",E,R[194],81,[[["self"],[R[195]]],["export"]]],[11,R[210],E,R[194],81,[[["self"],[R[195]]],["export"]]],[11,"delete",E,"Delete an export entry from this module.",81,[[["self"],[R[195]]]]],[11,"iter",E,"Get a shared reference to this module's exports.",81,[[["self"]]]],[11,R[206],E,"Get a mutable reference to this module's exports.",81,[[["self"]]]],[11,"add",E,"Add a new export to this module",81,[[["self"],["str"]],[R[195]]]],[11,"get_exported_func",E,"Get a reference to a function export given its function id.",81,[[["self"],[R[12]]],[["option",["export"]],["export"]]]],[11,"get_exported_table",E,"Get a reference to a table export given its table id.",81,[[["self"],[R[186]]],[["option",["export"]],["export"]]]],[11,"get_exported_memory",E,"Get a reference to a memory export given its export id.",81,[[["self"],[R[99]]],[["option",["export"]],["export"]]]],[11,"get_exported_global",E,"Get a reference to a global export given its global id.",81,[[["self"],[R[105]]],[["option",["export"]],["export"]]]],[11,"ty",E,"Get this function's type.",6,[[["self"]],["typeid"]]],[11,"entry_block",E,"Get the id of this function's entry block.",6,[[["self"]],[R[10]]]],[11,"block",E,R[197],6,[[["self"],[R[10]]],[R[97]]]],[11,R[196],E,R[197],6,[[["self"],[R[10]]],[R[97]]]],[11,"builder",E,R[199],6,[[["self"]],[R[198]]]],[11,"builder_mut",E,R[199],6,[[["self"]],[R[198]]]],[11,"size",E,"Get the size of this function, in number of instructions.",6,[[["self"]],["u64"]]],[11,"is_const",E,"Is this function's body a constant instruction?",6,[[["self"]],["bool"]]],[11,"used_data_segments",E,"Collect the set of data segments that are used in this…",6,[[["self"]],[["hashset",["id",R[200]]],["id",["data"]],[R[200]]]]],[11,"id",E,"Get this function's identifier.",5,[[["self"]],[R[12]]]],[11,"ty",E,"Get this function's type's identifier.",5,[[["self"]],["typeid"]]],[11,"unwrap_import",E,R[201],19,[[["self"]],[R[202]]]],[11,"unwrap_local",E,R[203],19,[[["self"]],[R[96]]]],[11,"unwrap_import_mut",E,R[201],19,[[["self"]],[R[202]]]],[11,"unwrap_local_mut",E,R[203],19,[[["self"]],[R[96]]]],[11,"new",E,"Construct a new, empty set of functions for a module.",82,[[],[R[204]]]],[11,R[208],E,"Create a new externally defined, imported function.",82,[[["self"],["typeid"],[R[212]]],[R[12]]]],[11,R[209],E,"Create a new internally defined function",82,[[["self"],[R[96]]],[R[12]]]],[11,"get",E,R[205],82,[[["self"],[R[12]]],["function"]]],[11,R[210],E,R[205],82,[[["self"],[R[12]]],["function"]]],[11,"by_name",E,"Get a function ID by its name.",82,[[["self"],["str"]],[[R[12]],["option",[R[12]]]]]],[11,"delete",E,"Removes a function from this module.",82,[[["self"],[R[12]]]]],[11,"iter",E,"Get a shared reference to this module's functions.",82,[[["self"]]]],[11,"iter_local",E,R[207],82,[[["self"]]]],[11,R[206],E,"Get a mutable reference to this module's functions.",82,[[["self"]]]],[11,"iter_local_mut",E,R[207],82,[[["self"]]]],[11,"id",E,"Get this global's id.",7,[[["self"]],[R[105]]]],[11,R[208],E,"Adds a new imported global to this list.",83,[[["self"],[R[214]],[R[212]],["bool"]],[R[105]]]],[11,R[209],E,"Construct a new global, that does not originate from any…",83,[[["self"],[R[214]],["initexpr"],["bool"]],[R[105]]]],[11,"get",E,R[211],83,[[["self"],[R[105]]],["global"]]],[11,R[210],E,R[211],83,[[["self"],[R[105]]],["global"]]],[11,"delete",E,"Removes a global from this module.",83,[[["self"],[R[105]]]]],[11,"iter",E,R[215],83,[[["self"]]]],[11,"id",E,"Get this import's identifier.",8,[[["self"]],[R[212]]]],[11,"get",E,R[213],84,[[["self"],[R[212]]],[R[2]]]],[11,R[210],E,R[213],84,[[["self"],[R[212]]],[R[2]]]],[11,"delete",E,"Removes an import from this module.",84,[[["self"],[R[212]]]]],[11,"iter",E,"Get a shared reference to this module's imports.",84,[[["self"]]]],[11,R[206],E,"Get mutable references to this module's imports.",84,[[["self"]]]],[11,"add",E,"Adds a new import to this module",84,[[["self"],["str"]],[R[212]]]],[11,"find",E,"Get the import with the given module and name",84,[[["self"],["str"]],[[R[212]],["option",[R[212]]]]]],[11,"add_import_func",E,"Add an imported function to this module",12,[[["self"],["typeid"],["str"]]]],[11,"add_import_memory",E,"Add an imported memory to this module",12,[[["self"],["u32"],["option",["u32"]],["str"],["bool"]]]],[11,"add_import_table",E,"Add an imported table to this module",12,[[["self"],["u32"],[R[216]],["str"],["option",["u32"]]]]],[11,"add_import_global",E,"Add an imported global to this module",12,[[["self"],["bool"],["str"],[R[214]]]]],[11,"add",E,"Construct a new local, that does not originate from any of…",85,[[["self"],[R[214]]],[R[98]]]],[11,"get",E,"Get the local for an ID",85,[[["self"],[R[98]]],["local"]]],[11,R[210],E,"Get the set of locals for this module.",85,[[["self"],[R[98]]],["local"]]],[11,"iter",E,R[215],85,[[["self"]]]],[11,"id",E,"Return the id of this memory",9,[[["self"]],[R[99]]]],[11,R[208],E,"Add an imported memory",86,[[["self"],["u32"],["option",["u32"]],[R[212]],["bool"]],[R[99]]]],[11,R[209],E,"Construct a new memory, that does not originate from any…",86,[[["self"],["u32"],["option",["u32"]],["bool"]],[R[99]]]],[11,"get",E,R[211],86,[[["self"],[R[99]]],[R[17]]]],[11,R[210],E,R[211],86,[[["self"],[R[99]]],[R[17]]]],[11,"delete",E,"Removes a memory from this module.",86,[[["self"],[R[99]]]]],[11,"iter",E,"Get a shared reference to this module's memories.",86,[[["self"]]]],[11,R[206],E,"Get a mutable reference to this module's memories.",86,[[["self"]]]],[11,"add_language",E,"Adds a new `language` (versioned) to the producers section",87,[[["self"],["str"]]]],[11,"add_processed_by",E,"Adds a new `processed-by` (versioned) to the producers…",87,[[["self"],["str"]]]],[11,"add_sdk",E,"Adds a new `sdk` (versioned) to the producers section",87,[[["self"],["str"]]]],[11,"clear",E,"Clear the producers section of all keys/values",87,[[["self"]]]],[11,"unwrap_function",E,"Unwrap `TableKind` to get inner `FunctionTable`. Panics if…",22,[[["self"]],[R[237]]]],[11,"unwrap_anyref",E,"Unwrap `TableKind` to get inner `Anyref`. Panics if…",22,[[["self"]],["anyreftable"]]],[11,"id",E,"Get this table's id.",11,[[["self"]],[R[186]]]],[11,R[208],E,"Adds a new imported table to this list of tables",88,[[["self"],["u32"],[R[216]],[R[212]],["option",["u32"]]],[R[186]]]],[11,R[209],E,"Construct a new table, that does not originate from any of…",88,[[["self"],["u32"],[R[216]],["option",["u32"]]],[R[186]]]],[11,"get",E,R[217],88,[[["self"],[R[186]]],["table"]]],[11,R[210],E,R[217],88,[[["self"],[R[186]]],["table"]]],[11,"delete",E,"Removes a table from this module.",88,[[["self"],[R[186]]]]],[11,"iter",E,R[218],88,[[["self"]]]],[11,"main_function_table",E,"Finds a unique function table in a module.",88,[[["self"]],[["result",["option"]],["option",[R[186]]]]]],[11,R[206],E,R[218],88,[[["self"]]]],[11,"get",E,R[219],89,[[["self"],["typeid"]],["type"]]],[11,R[210],E,R[219],89,[[["self"],["typeid"]],["type"]]],[11,"params_results",E,"Get the parameters and results for the given type.",89,[[["self"],["typeid"]]]],[11,"params",E,"Get the parameters for the given type.",89,[[["self"],["typeid"]]]],[11,"results",E,"Get the results for the given type.",89,[[["self"],["typeid"]]]],[11,"by_name",E,"Get a type ID by its name.",89,[[["self"],["str"]],[["option",["typeid"]],["typeid"]]]],[11,"iter",E,"Get a shared reference to this module's types.",89,[[["self"]]]],[11,"delete",E,"Removes a type from this module.",89,[[["self"],["typeid"]]]],[11,"add",E,"Add a new type to this module, and return its `Id`",89,[[["self"]],["typeid"]]],[11,"find",E,"Find the existing type for the given parameters and results.",89,[[["self"]],[["option",["typeid"]],["typeid"]]]],[11,"with_config",E,"Create a default, empty module that uses the given…",12,[[[R[189]]],["self"]]],[11,"from_file",E,"Construct a new module from the given path with the…",12,[[["p"]],[["result",["module"]],["module"]]]],[11,"from_file_with_config",E,"Construct a new module from the given path and…",12,[[[R[189]],["p"]],[["result",["module"]],["module"]]]],[11,"from_buffer",E,"Construct a new module from the in-memory wasm buffer with…",12,[[],[["result",["module"]],["module"]]]],[11,"emit_wasm_file",E,"Emit this module into a `.wasm` file at the given path.",12,[[["self"],["p"]],["result"]]],[11,"emit_wasm",E,"Emit this module into an in-memory wasm buffer.",12,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"functions",E,"Returns an iterator over all functions in this module",12,[[["self"]]]],[11,"get_table",E,R[220],90,[[["self"],["u32"]],[["result",[R[186]]],[R[186]]]]],[11,"get_type",E,R[220],90,[[["self"],["u32"]],[["typeid"],["result",["typeid"]]]]],[11,"get_func",E,R[220],90,[[["self"],["u32"]],[[R[12]],["result",[R[12]]]]]],[11,"get_global",E,R[220],90,[[["self"],["u32"]],[["result",[R[105]]],[R[105]]]]],[11,"get_memory",E,R[220],90,[[["self"],["u32"]],[[R[99]],["result",[R[99]]]]]],[11,"get_data",E,R[220],90,[[["self"],["u32"]],[["result",["dataid"]],["dataid"]]]],[11,"get_local",E,"Gets the ID for a particular index",90,[[["self"],[R[12]],["u32"]],[[R[98]],["result",[R[98]]]]]],[0,"passes",E,"Passes over whole modules or individual functions.",N,N],[3,"Used",R[221],"Finds the things within a module that are used.",N,N],[12,"tables",E,"The module's used tables.",91,N],[12,"types",E,"The module's used types.",91,N],[12,"funcs",E,"The module's used functions.",91,N],[12,"globals",E,"The module's used globals.",91,N],[12,"memories",E,"The module's used memories.",91,N],[12,R[3],E,"The module's used passive element segments.",91,N],[12,"data",E,"The module's used passive data segments.",91,N],[0,"gc",E,"Removes any non-referenced items from a module",N,N],[5,"run","walrus::passes::gc","Run GC passes over the module specified.",N,[[["module"]]]],[11,"new",R[221],"Construct a new `Used` set for the given module.",91,[[["module"],["r"]],["used"]]],[0,"validate",E,"Validation of a wasm module",N,N],[5,"run","walrus::passes::validate","Validate a wasm module, returning an error if it fails to…",N,[[["module"]],["result"]]],[11,"id","walrus","Get the id of this type.",13,[[["self"]],["typeid"]]],[11,"params",E,"Get the parameters to this function type.",13,[[["self"]]]],[11,"results",E,"Get the results of this function type.",13,[[["self"]]]],[6,"Result",E,"Either `Ok(T)` or `Err(failure::Error)`.",N,N],[6,"DataId",E,R[222],N,N],[6,"ElementId",E,R[222],N,N],[6,"ExportId",E,"The id of an export.",N,N],[6,"FunctionId",E,"A function identifier.",N,N],[6,"GlobalId",E,"The id of a global.",N,N],[6,"ImportId",E,"The id of an import.",N,N],[6,"MemoryId",E,"The id of a memory.",N,N],[6,"TableId",E,"The id of a table.",N,N],[6,"TypeId",E,"An identifier for types.",N,N],[8,R[223],E,"A trait for implementing custom sections.",N,N],[10,"name",E,"Get this custom section's name.",92,[[["self"]],["str"]]],[10,"data",E,"Get the data payload for this custom section.",92,[[["self"],[R[231]]],["cow"]]],[8,R[285],E,"A common trait for custom section identifiers.",N,N],[16,R[223],E,"The concrete custom section type that this id gets out of…",93,N],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[225],E,E,24,[[[U]],["result"]]],[11,R[226],E,E,24,[[],["result"]]],[11,R[224],E,E,24,[[["self"]],[T]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[228],E,E,24,[[["self"]],["typeid"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[225],E,E,25,[[[U]],["result"]]],[11,R[226],E,E,25,[[],["result"]]],[11,R[224],E,E,25,[[["self"]],[T]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[228],E,E,25,[[["self"]],["typeid"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[225],E,E,26,[[[U]],["result"]]],[11,R[226],E,E,26,[[],["result"]]],[11,R[224],E,E,26,[[["self"]],[T]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[228],E,E,26,[[["self"]],["typeid"]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[225],E,E,78,[[[U]],["result"]]],[11,R[226],E,E,78,[[],["result"]]],[11,R[224],E,E,78,[[["self"]],[T]]],[11,"borrow",E,E,78,[[["self"]],[T]]],[11,R[228],E,E,78,[[["self"]],["typeid"]]],[11,"into",E,E,0,[[],[U]]],[11,R[229],E,E,0,[[["self"]],[T]]],[11,R[227],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[225],E,E,0,[[[U]],["result"]]],[11,R[226],E,E,0,[[],["result"]]],[11,R[224],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[228],E,E,0,[[["self"]],["typeid"]]],[11,"into",E,E,94,[[],[U]]],[11,R[229],E,E,94,[[["self"]],[T]]],[11,R[227],E,E,94,[[["self"],[T]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[225],E,E,94,[[[U]],["result"]]],[11,R[226],E,E,94,[[],["result"]]],[11,R[224],E,E,94,[[["self"]],[T]]],[11,"borrow",E,E,94,[[["self"]],[T]]],[11,R[228],E,E,94,[[["self"]],["typeid"]]],[11,"into",E,E,95,[[],[U]]],[11,R[229],E,E,95,[[["self"]],[T]]],[11,R[227],E,E,95,[[["self"],[T]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[225],E,E,95,[[[U]],["result"]]],[11,R[226],E,E,95,[[],["result"]]],[11,R[224],E,E,95,[[["self"]],[T]]],[11,"borrow",E,E,95,[[["self"]],[T]]],[11,R[228],E,E,95,[[["self"]],["typeid"]]],[11,"into",E,E,1,[[],[U]]],[11,R[229],E,E,1,[[["self"]],[T]]],[11,R[227],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[225],E,E,1,[[[U]],["result"]]],[11,R[226],E,E,1,[[],["result"]]],[11,R[224],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[228],E,E,1,[[["self"]],["typeid"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[225],E,E,2,[[[U]],["result"]]],[11,R[226],E,E,2,[[],["result"]]],[11,R[224],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[228],E,E,2,[[["self"]],["typeid"]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[225],E,E,79,[[[U]],["result"]]],[11,R[226],E,E,79,[[],["result"]]],[11,R[224],E,E,79,[[["self"]],[T]]],[11,"borrow",E,E,79,[[["self"]],[T]]],[11,R[228],E,E,79,[[["self"]],["typeid"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[225],E,E,3,[[[U]],["result"]]],[11,R[226],E,E,3,[[],["result"]]],[11,R[224],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[228],E,E,3,[[["self"]],["typeid"]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[225],E,E,80,[[[U]],["result"]]],[11,R[226],E,E,80,[[],["result"]]],[11,R[224],E,E,80,[[["self"]],[T]]],[11,"borrow",E,E,80,[[["self"]],[T]]],[11,R[228],E,E,80,[[["self"]],["typeid"]]],[11,"into",E,E,4,[[],[U]]],[11,R[229],E,E,4,[[["self"]],[T]]],[11,R[227],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[225],E,E,4,[[[U]],["result"]]],[11,R[226],E,E,4,[[],["result"]]],[11,R[224],E,E,4,[[["self"]],[T]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[228],E,E,4,[[["self"]],["typeid"]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[225],E,E,81,[[[U]],["result"]]],[11,R[226],E,E,81,[[],["result"]]],[11,R[224],E,E,81,[[["self"]],[T]]],[11,"borrow",E,E,81,[[["self"]],[T]]],[11,R[228],E,E,81,[[["self"]],["typeid"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[225],E,E,5,[[[U]],["result"]]],[11,R[226],E,E,5,[[],["result"]]],[11,R[224],E,E,5,[[["self"]],[T]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[228],E,E,5,[[["self"]],["typeid"]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[225],E,E,82,[[[U]],["result"]]],[11,R[226],E,E,82,[[],["result"]]],[11,R[224],E,E,82,[[["self"]],[T]]],[11,"borrow",E,E,82,[[["self"]],[T]]],[11,R[228],E,E,82,[[["self"]],["typeid"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[225],E,E,6,[[[U]],["result"]]],[11,R[226],E,E,6,[[],["result"]]],[11,R[224],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[228],E,E,6,[[["self"]],["typeid"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[225],E,E,7,[[[U]],["result"]]],[11,R[226],E,E,7,[[],["result"]]],[11,R[224],E,E,7,[[["self"]],[T]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[228],E,E,7,[[["self"]],["typeid"]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[225],E,E,83,[[[U]],["result"]]],[11,R[226],E,E,83,[[],["result"]]],[11,R[224],E,E,83,[[["self"]],[T]]],[11,"borrow",E,E,83,[[["self"]],[T]]],[11,R[228],E,E,83,[[["self"]],["typeid"]]],[11,"into",E,E,8,[[],[U]]],[11,R[229],E,E,8,[[["self"]],[T]]],[11,R[227],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[225],E,E,8,[[[U]],["result"]]],[11,R[226],E,E,8,[[],["result"]]],[11,R[224],E,E,8,[[["self"]],[T]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[228],E,E,8,[[["self"]],["typeid"]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[225],E,E,84,[[[U]],["result"]]],[11,R[226],E,E,84,[[],["result"]]],[11,R[224],E,E,84,[[["self"]],[T]]],[11,"borrow",E,E,84,[[["self"]],[T]]],[11,R[228],E,E,84,[[["self"]],["typeid"]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[225],E,E,85,[[[U]],["result"]]],[11,R[226],E,E,85,[[],["result"]]],[11,R[224],E,E,85,[[["self"]],[T]]],[11,"borrow",E,E,85,[[["self"]],[T]]],[11,R[228],E,E,85,[[["self"]],["typeid"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[225],E,E,9,[[[U]],["result"]]],[11,R[226],E,E,9,[[],["result"]]],[11,R[224],E,E,9,[[["self"]],[T]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[228],E,E,9,[[["self"]],["typeid"]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[225],E,E,86,[[[U]],["result"]]],[11,R[226],E,E,86,[[],["result"]]],[11,R[224],E,E,86,[[["self"]],[T]]],[11,"borrow",E,E,86,[[["self"]],[T]]],[11,R[228],E,E,86,[[["self"]],["typeid"]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[225],E,E,87,[[[U]],["result"]]],[11,R[226],E,E,87,[[],["result"]]],[11,R[224],E,E,87,[[["self"]],[T]]],[11,"borrow",E,E,87,[[["self"]],[T]]],[11,R[228],E,E,87,[[["self"]],["typeid"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[225],E,E,10,[[[U]],["result"]]],[11,R[226],E,E,10,[[],["result"]]],[11,R[224],E,E,10,[[["self"]],[T]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[228],E,E,10,[[["self"]],["typeid"]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[225],E,E,88,[[[U]],["result"]]],[11,R[226],E,E,88,[[],["result"]]],[11,R[224],E,E,88,[[["self"]],[T]]],[11,"borrow",E,E,88,[[["self"]],[T]]],[11,R[228],E,E,88,[[["self"]],["typeid"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[225],E,E,11,[[[U]],["result"]]],[11,R[226],E,E,11,[[],["result"]]],[11,R[224],E,E,11,[[["self"]],[T]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[228],E,E,11,[[["self"]],["typeid"]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[225],E,E,89,[[[U]],["result"]]],[11,R[226],E,E,89,[[],["result"]]],[11,R[224],E,E,89,[[["self"]],[T]]],[11,"borrow",E,E,89,[[["self"]],[T]]],[11,R[228],E,E,89,[[["self"]],["typeid"]]],[11,"into",E,E,77,[[],[U]]],[11,R[229],E,E,77,[[["self"]],[T]]],[11,R[227],E,E,77,[[["self"],[T]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[225],E,E,77,[[[U]],["result"]]],[11,R[226],E,E,77,[[],["result"]]],[11,R[224],E,E,77,[[["self"]],[T]]],[11,"borrow",E,E,77,[[["self"]],[T]]],[11,R[228],E,E,77,[[["self"]],["typeid"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[225],E,E,12,[[[U]],["result"]]],[11,R[226],E,E,12,[[],["result"]]],[11,R[224],E,E,12,[[["self"]],[T]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[228],E,E,12,[[["self"]],["typeid"]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[225],E,E,90,[[[U]],["result"]]],[11,R[226],E,E,90,[[],["result"]]],[11,R[224],E,E,90,[[["self"]],[T]]],[11,"borrow",E,E,90,[[["self"]],[T]]],[11,R[228],E,E,90,[[["self"]],["typeid"]]],[11,"into",E,E,13,[[],[U]]],[11,R[229],E,E,13,[[["self"]],[T]]],[11,R[227],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[225],E,E,13,[[[U]],["result"]]],[11,R[226],E,E,13,[[],["result"]]],[11,R[224],E,E,13,[[["self"]],[T]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[228],E,E,13,[[["self"]],["typeid"]]],[11,"into",E,E,14,[[],[U]]],[11,R[230],E,E,14,[[["self"]],["string"]]],[11,R[229],E,E,14,[[["self"]],[T]]],[11,R[227],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[225],E,E,14,[[[U]],["result"]]],[11,R[226],E,E,14,[[],["result"]]],[11,R[224],E,E,14,[[["self"]],[T]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[228],E,E,14,[[["self"]],["typeid"]]],[11,"as_fail",E,E,14,[[["self"]],["fail"]]],[11,"into",E,E,15,[[],[U]]],[11,R[229],E,E,15,[[["self"]],[T]]],[11,R[227],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[225],E,E,15,[[[U]],["result"]]],[11,R[226],E,E,15,[[],["result"]]],[11,R[224],E,E,15,[[["self"]],[T]]],[11,"borrow",E,E,15,[[["self"]],[T]]],[11,R[228],E,E,15,[[["self"]],["typeid"]]],[11,"into",E,E,16,[[],[U]]],[11,R[229],E,E,16,[[["self"]],[T]]],[11,R[227],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[225],E,E,16,[[[U]],["result"]]],[11,R[226],E,E,16,[[],["result"]]],[11,R[224],E,E,16,[[["self"]],[T]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[228],E,E,16,[[["self"]],["typeid"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[225],E,E,17,[[[U]],["result"]]],[11,R[226],E,E,17,[[],["result"]]],[11,R[224],E,E,17,[[["self"]],[T]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[228],E,E,17,[[["self"]],["typeid"]]],[11,"into",E,E,18,[[],[U]]],[11,R[229],E,E,18,[[["self"]],[T]]],[11,R[227],E,E,18,[[["self"],[T]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[225],E,E,18,[[[U]],["result"]]],[11,R[226],E,E,18,[[],["result"]]],[11,R[224],E,E,18,[[["self"]],[T]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[228],E,E,18,[[["self"]],["typeid"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[225],E,E,19,[[[U]],["result"]]],[11,R[226],E,E,19,[[],["result"]]],[11,R[224],E,E,19,[[["self"]],[T]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[228],E,E,19,[[["self"]],["typeid"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[225],E,E,20,[[[U]],["result"]]],[11,R[226],E,E,20,[[],["result"]]],[11,R[224],E,E,20,[[["self"]],[T]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[228],E,E,20,[[["self"]],["typeid"]]],[11,"into",E,E,21,[[],[U]]],[11,R[229],E,E,21,[[["self"]],[T]]],[11,R[227],E,E,21,[[["self"],[T]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[225],E,E,21,[[[U]],["result"]]],[11,R[226],E,E,21,[[],["result"]]],[11,R[224],E,E,21,[[["self"]],[T]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[228],E,E,21,[[["self"]],["typeid"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[225],E,E,22,[[[U]],["result"]]],[11,R[226],E,E,22,[[],["result"]]],[11,R[224],E,E,22,[[["self"]],[T]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[228],E,E,22,[[["self"]],["typeid"]]],[11,"into",E,E,23,[[],[U]]],[11,R[230],E,E,23,[[["self"]],["string"]]],[11,R[229],E,E,23,[[["self"]],[T]]],[11,R[227],E,E,23,[[["self"],[T]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[225],E,E,23,[[[U]],["result"]]],[11,R[226],E,E,23,[[],["result"]]],[11,R[224],E,E,23,[[["self"]],[T]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[228],E,E,23,[[["self"]],["typeid"]]],[11,"into",R[88],E,27,[[],[U]]],[11,R[229],E,E,27,[[["self"]],[T]]],[11,R[227],E,E,27,[[["self"],[T]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[225],E,E,27,[[[U]],["result"]]],[11,R[226],E,E,27,[[],["result"]]],[11,R[224],E,E,27,[[["self"]],[T]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[228],E,E,27,[[["self"]],["typeid"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[225],E,E,28,[[[U]],["result"]]],[11,R[226],E,E,28,[[],["result"]]],[11,R[224],E,E,28,[[["self"]],[T]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[228],E,E,28,[[["self"]],["typeid"]]],[11,"into",E,E,29,[[],[U]]],[11,R[229],E,E,29,[[["self"]],[T]]],[11,R[227],E,E,29,[[["self"],[T]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[225],E,E,29,[[[U]],["result"]]],[11,R[226],E,E,29,[[],["result"]]],[11,R[224],E,E,29,[[["self"]],[T]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[228],E,E,29,[[["self"]],["typeid"]]],[11,"into",E,E,30,[[],[U]]],[11,R[229],E,E,30,[[["self"]],[T]]],[11,R[227],E,E,30,[[["self"],[T]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[225],E,E,30,[[[U]],["result"]]],[11,R[226],E,E,30,[[],["result"]]],[11,R[224],E,E,30,[[["self"]],[T]]],[11,"borrow",E,E,30,[[["self"]],[T]]],[11,R[228],E,E,30,[[["self"]],["typeid"]]],[11,"into",E,E,31,[[],[U]]],[11,R[229],E,E,31,[[["self"]],[T]]],[11,R[227],E,E,31,[[["self"],[T]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[225],E,E,31,[[[U]],["result"]]],[11,R[226],E,E,31,[[],["result"]]],[11,R[224],E,E,31,[[["self"]],[T]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[228],E,E,31,[[["self"]],["typeid"]]],[11,"into",E,E,32,[[],[U]]],[11,R[229],E,E,32,[[["self"]],[T]]],[11,R[227],E,E,32,[[["self"],[T]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[225],E,E,32,[[[U]],["result"]]],[11,R[226],E,E,32,[[],["result"]]],[11,R[224],E,E,32,[[["self"]],[T]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[228],E,E,32,[[["self"]],["typeid"]]],[11,"into",E,E,33,[[],[U]]],[11,R[229],E,E,33,[[["self"]],[T]]],[11,R[227],E,E,33,[[["self"],[T]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[225],E,E,33,[[[U]],["result"]]],[11,R[226],E,E,33,[[],["result"]]],[11,R[224],E,E,33,[[["self"]],[T]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[228],E,E,33,[[["self"]],["typeid"]]],[11,"into",E,E,34,[[],[U]]],[11,R[229],E,E,34,[[["self"]],[T]]],[11,R[227],E,E,34,[[["self"],[T]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[225],E,E,34,[[[U]],["result"]]],[11,R[226],E,E,34,[[],["result"]]],[11,R[224],E,E,34,[[["self"]],[T]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[228],E,E,34,[[["self"]],["typeid"]]],[11,"into",E,E,35,[[],[U]]],[11,R[229],E,E,35,[[["self"]],[T]]],[11,R[227],E,E,35,[[["self"],[T]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[225],E,E,35,[[[U]],["result"]]],[11,R[226],E,E,35,[[],["result"]]],[11,R[224],E,E,35,[[["self"]],[T]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[228],E,E,35,[[["self"]],["typeid"]]],[11,"into",E,E,36,[[],[U]]],[11,R[229],E,E,36,[[["self"]],[T]]],[11,R[227],E,E,36,[[["self"],[T]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[225],E,E,36,[[[U]],["result"]]],[11,R[226],E,E,36,[[],["result"]]],[11,R[224],E,E,36,[[["self"]],[T]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[228],E,E,36,[[["self"]],["typeid"]]],[11,"into",E,E,37,[[],[U]]],[11,R[229],E,E,37,[[["self"]],[T]]],[11,R[227],E,E,37,[[["self"],[T]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[225],E,E,37,[[[U]],["result"]]],[11,R[226],E,E,37,[[],["result"]]],[11,R[224],E,E,37,[[["self"]],[T]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[228],E,E,37,[[["self"]],["typeid"]]],[11,"into",E,E,38,[[],[U]]],[11,R[229],E,E,38,[[["self"]],[T]]],[11,R[227],E,E,38,[[["self"],[T]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[225],E,E,38,[[[U]],["result"]]],[11,R[226],E,E,38,[[],["result"]]],[11,R[224],E,E,38,[[["self"]],[T]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[228],E,E,38,[[["self"]],["typeid"]]],[11,"into",E,E,39,[[],[U]]],[11,R[229],E,E,39,[[["self"]],[T]]],[11,R[227],E,E,39,[[["self"],[T]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[225],E,E,39,[[[U]],["result"]]],[11,R[226],E,E,39,[[],["result"]]],[11,R[224],E,E,39,[[["self"]],[T]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[228],E,E,39,[[["self"]],["typeid"]]],[11,"into",E,E,40,[[],[U]]],[11,R[229],E,E,40,[[["self"]],[T]]],[11,R[227],E,E,40,[[["self"],[T]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[225],E,E,40,[[[U]],["result"]]],[11,R[226],E,E,40,[[],["result"]]],[11,R[224],E,E,40,[[["self"]],[T]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[228],E,E,40,[[["self"]],["typeid"]]],[11,"into",E,E,96,[[],[U]]],[11,R[229],E,E,96,[[["self"]],[T]]],[11,R[227],E,E,96,[[["self"],[T]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[225],E,E,96,[[[U]],["result"]]],[11,R[226],E,E,96,[[],["result"]]],[11,R[224],E,E,96,[[["self"]],[T]]],[11,"borrow",E,E,96,[[["self"]],[T]]],[11,R[228],E,E,96,[[["self"]],["typeid"]]],[11,"into",E,E,97,[[],[U]]],[11,R[229],E,E,97,[[["self"]],[T]]],[11,R[227],E,E,97,[[["self"],[T]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[225],E,E,97,[[[U]],["result"]]],[11,R[226],E,E,97,[[],["result"]]],[11,R[224],E,E,97,[[["self"]],[T]]],[11,"borrow",E,E,97,[[["self"]],[T]]],[11,R[228],E,E,97,[[["self"]],["typeid"]]],[11,"into",E,E,41,[[],[U]]],[11,R[229],E,E,41,[[["self"]],[T]]],[11,R[227],E,E,41,[[["self"],[T]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[225],E,E,41,[[[U]],["result"]]],[11,R[226],E,E,41,[[],["result"]]],[11,R[224],E,E,41,[[["self"]],[T]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[228],E,E,41,[[["self"]],["typeid"]]],[11,"into",E,E,42,[[],[U]]],[11,R[229],E,E,42,[[["self"]],[T]]],[11,R[227],E,E,42,[[["self"],[T]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[225],E,E,42,[[[U]],["result"]]],[11,R[226],E,E,42,[[],["result"]]],[11,R[224],E,E,42,[[["self"]],[T]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[228],E,E,42,[[["self"]],["typeid"]]],[11,"into",E,E,43,[[],[U]]],[11,R[229],E,E,43,[[["self"]],[T]]],[11,R[227],E,E,43,[[["self"],[T]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[225],E,E,43,[[[U]],["result"]]],[11,R[226],E,E,43,[[],["result"]]],[11,R[224],E,E,43,[[["self"]],[T]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[228],E,E,43,[[["self"]],["typeid"]]],[11,"into",E,E,44,[[],[U]]],[11,R[229],E,E,44,[[["self"]],[T]]],[11,R[227],E,E,44,[[["self"],[T]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[225],E,E,44,[[[U]],["result"]]],[11,R[226],E,E,44,[[],["result"]]],[11,R[224],E,E,44,[[["self"]],[T]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[228],E,E,44,[[["self"]],["typeid"]]],[11,"into",E,E,98,[[],[U]]],[11,R[229],E,E,98,[[["self"]],[T]]],[11,R[227],E,E,98,[[["self"],[T]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[225],E,E,98,[[[U]],["result"]]],[11,R[226],E,E,98,[[],["result"]]],[11,R[224],E,E,98,[[["self"]],[T]]],[11,"borrow",E,E,98,[[["self"]],[T]]],[11,R[228],E,E,98,[[["self"]],["typeid"]]],[11,"into",E,E,99,[[],[U]]],[11,R[229],E,E,99,[[["self"]],[T]]],[11,R[227],E,E,99,[[["self"],[T]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[225],E,E,99,[[[U]],["result"]]],[11,R[226],E,E,99,[[],["result"]]],[11,R[224],E,E,99,[[["self"]],[T]]],[11,"borrow",E,E,99,[[["self"]],[T]]],[11,R[228],E,E,99,[[["self"]],["typeid"]]],[11,"into",E,E,45,[[],[U]]],[11,R[229],E,E,45,[[["self"]],[T]]],[11,R[227],E,E,45,[[["self"],[T]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[225],E,E,45,[[[U]],["result"]]],[11,R[226],E,E,45,[[],["result"]]],[11,R[224],E,E,45,[[["self"]],[T]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[228],E,E,45,[[["self"]],["typeid"]]],[11,"into",E,E,46,[[],[U]]],[11,R[229],E,E,46,[[["self"]],[T]]],[11,R[227],E,E,46,[[["self"],[T]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[225],E,E,46,[[[U]],["result"]]],[11,R[226],E,E,46,[[],["result"]]],[11,R[224],E,E,46,[[["self"]],[T]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[228],E,E,46,[[["self"]],["typeid"]]],[11,"into",E,E,47,[[],[U]]],[11,R[229],E,E,47,[[["self"]],[T]]],[11,R[227],E,E,47,[[["self"],[T]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[225],E,E,47,[[[U]],["result"]]],[11,R[226],E,E,47,[[],["result"]]],[11,R[224],E,E,47,[[["self"]],[T]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[228],E,E,47,[[["self"]],["typeid"]]],[11,"into",E,E,48,[[],[U]]],[11,R[229],E,E,48,[[["self"]],[T]]],[11,R[227],E,E,48,[[["self"],[T]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[225],E,E,48,[[[U]],["result"]]],[11,R[226],E,E,48,[[],["result"]]],[11,R[224],E,E,48,[[["self"]],[T]]],[11,"borrow",E,E,48,[[["self"]],[T]]],[11,R[228],E,E,48,[[["self"]],["typeid"]]],[11,"into",E,E,49,[[],[U]]],[11,R[229],E,E,49,[[["self"]],[T]]],[11,R[227],E,E,49,[[["self"],[T]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[225],E,E,49,[[[U]],["result"]]],[11,R[226],E,E,49,[[],["result"]]],[11,R[224],E,E,49,[[["self"]],[T]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[228],E,E,49,[[["self"]],["typeid"]]],[11,"into",E,E,50,[[],[U]]],[11,R[229],E,E,50,[[["self"]],[T]]],[11,R[227],E,E,50,[[["self"],[T]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[225],E,E,50,[[[U]],["result"]]],[11,R[226],E,E,50,[[],["result"]]],[11,R[224],E,E,50,[[["self"]],[T]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[228],E,E,50,[[["self"]],["typeid"]]],[11,"into",E,E,51,[[],[U]]],[11,R[229],E,E,51,[[["self"]],[T]]],[11,R[227],E,E,51,[[["self"],[T]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[225],E,E,51,[[[U]],["result"]]],[11,R[226],E,E,51,[[],["result"]]],[11,R[224],E,E,51,[[["self"]],[T]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[228],E,E,51,[[["self"]],["typeid"]]],[11,"into",E,E,52,[[],[U]]],[11,R[229],E,E,52,[[["self"]],[T]]],[11,R[227],E,E,52,[[["self"],[T]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[225],E,E,52,[[[U]],["result"]]],[11,R[226],E,E,52,[[],["result"]]],[11,R[224],E,E,52,[[["self"]],[T]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[228],E,E,52,[[["self"]],["typeid"]]],[11,"into",E,E,53,[[],[U]]],[11,R[229],E,E,53,[[["self"]],[T]]],[11,R[227],E,E,53,[[["self"],[T]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[225],E,E,53,[[[U]],["result"]]],[11,R[226],E,E,53,[[],["result"]]],[11,R[224],E,E,53,[[["self"]],[T]]],[11,"borrow",E,E,53,[[["self"]],[T]]],[11,R[228],E,E,53,[[["self"]],["typeid"]]],[11,"into",E,E,54,[[],[U]]],[11,R[229],E,E,54,[[["self"]],[T]]],[11,R[227],E,E,54,[[["self"],[T]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[225],E,E,54,[[[U]],["result"]]],[11,R[226],E,E,54,[[],["result"]]],[11,R[224],E,E,54,[[["self"]],[T]]],[11,"borrow",E,E,54,[[["self"]],[T]]],[11,R[228],E,E,54,[[["self"]],["typeid"]]],[11,"into",E,E,55,[[],[U]]],[11,R[229],E,E,55,[[["self"]],[T]]],[11,R[227],E,E,55,[[["self"],[T]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[225],E,E,55,[[[U]],["result"]]],[11,R[226],E,E,55,[[],["result"]]],[11,R[224],E,E,55,[[["self"]],[T]]],[11,"borrow",E,E,55,[[["self"]],[T]]],[11,R[228],E,E,55,[[["self"]],["typeid"]]],[11,"into",E,E,56,[[],[U]]],[11,R[229],E,E,56,[[["self"]],[T]]],[11,R[227],E,E,56,[[["self"],[T]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[225],E,E,56,[[[U]],["result"]]],[11,R[226],E,E,56,[[],["result"]]],[11,R[224],E,E,56,[[["self"]],[T]]],[11,"borrow",E,E,56,[[["self"]],[T]]],[11,R[228],E,E,56,[[["self"]],["typeid"]]],[11,"into",E,E,100,[[],[U]]],[11,R[229],E,E,100,[[["self"]],[T]]],[11,R[227],E,E,100,[[["self"],[T]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[225],E,E,100,[[[U]],["result"]]],[11,R[226],E,E,100,[[],["result"]]],[11,R[224],E,E,100,[[["self"]],[T]]],[11,"borrow",E,E,100,[[["self"]],[T]]],[11,R[228],E,E,100,[[["self"]],["typeid"]]],[11,"into",E,E,57,[[],[U]]],[11,R[229],E,E,57,[[["self"]],[T]]],[11,R[227],E,E,57,[[["self"],[T]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[225],E,E,57,[[[U]],["result"]]],[11,R[226],E,E,57,[[],["result"]]],[11,R[224],E,E,57,[[["self"]],[T]]],[11,"borrow",E,E,57,[[["self"]],[T]]],[11,R[228],E,E,57,[[["self"]],["typeid"]]],[11,"into",E,E,58,[[],[U]]],[11,R[229],E,E,58,[[["self"]],[T]]],[11,R[227],E,E,58,[[["self"],[T]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[225],E,E,58,[[[U]],["result"]]],[11,R[226],E,E,58,[[],["result"]]],[11,R[224],E,E,58,[[["self"]],[T]]],[11,"borrow",E,E,58,[[["self"]],[T]]],[11,R[228],E,E,58,[[["self"]],["typeid"]]],[11,"into",E,E,59,[[],[U]]],[11,R[229],E,E,59,[[["self"]],[T]]],[11,R[227],E,E,59,[[["self"],[T]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[225],E,E,59,[[[U]],["result"]]],[11,R[226],E,E,59,[[],["result"]]],[11,R[224],E,E,59,[[["self"]],[T]]],[11,"borrow",E,E,59,[[["self"]],[T]]],[11,R[228],E,E,59,[[["self"]],["typeid"]]],[11,"into",E,E,60,[[],[U]]],[11,R[229],E,E,60,[[["self"]],[T]]],[11,R[227],E,E,60,[[["self"],[T]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[225],E,E,60,[[[U]],["result"]]],[11,R[226],E,E,60,[[],["result"]]],[11,R[224],E,E,60,[[["self"]],[T]]],[11,"borrow",E,E,60,[[["self"]],[T]]],[11,R[228],E,E,60,[[["self"]],["typeid"]]],[11,"into",E,E,101,[[],[U]]],[11,R[229],E,E,101,[[["self"]],[T]]],[11,R[227],E,E,101,[[["self"],[T]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[225],E,E,101,[[[U]],["result"]]],[11,R[226],E,E,101,[[],["result"]]],[11,R[224],E,E,101,[[["self"]],[T]]],[11,"borrow",E,E,101,[[["self"]],[T]]],[11,R[228],E,E,101,[[["self"]],["typeid"]]],[11,"into",E,E,102,[[],[U]]],[11,R[229],E,E,102,[[["self"]],[T]]],[11,R[227],E,E,102,[[["self"],[T]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[225],E,E,102,[[[U]],["result"]]],[11,R[226],E,E,102,[[],["result"]]],[11,R[224],E,E,102,[[["self"]],[T]]],[11,"borrow",E,E,102,[[["self"]],[T]]],[11,R[228],E,E,102,[[["self"]],["typeid"]]],[11,"into",E,E,103,[[],[U]]],[11,R[229],E,E,103,[[["self"]],[T]]],[11,R[227],E,E,103,[[["self"],[T]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[225],E,E,103,[[[U]],["result"]]],[11,R[226],E,E,103,[[],["result"]]],[11,R[224],E,E,103,[[["self"]],[T]]],[11,"borrow",E,E,103,[[["self"]],[T]]],[11,R[228],E,E,103,[[["self"]],["typeid"]]],[11,"into",E,E,104,[[],[U]]],[11,R[229],E,E,104,[[["self"]],[T]]],[11,R[227],E,E,104,[[["self"],[T]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[225],E,E,104,[[[U]],["result"]]],[11,R[226],E,E,104,[[],["result"]]],[11,R[224],E,E,104,[[["self"]],[T]]],[11,"borrow",E,E,104,[[["self"]],[T]]],[11,R[228],E,E,104,[[["self"]],["typeid"]]],[11,"into",E,E,61,[[],[U]]],[11,R[229],E,E,61,[[["self"]],[T]]],[11,R[227],E,E,61,[[["self"],[T]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[225],E,E,61,[[[U]],["result"]]],[11,R[226],E,E,61,[[],["result"]]],[11,R[224],E,E,61,[[["self"]],[T]]],[11,"borrow",E,E,61,[[["self"]],[T]]],[11,R[228],E,E,61,[[["self"]],["typeid"]]],[11,"into",E,E,62,[[],[U]]],[11,R[229],E,E,62,[[["self"]],[T]]],[11,R[227],E,E,62,[[["self"],[T]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[225],E,E,62,[[[U]],["result"]]],[11,R[226],E,E,62,[[],["result"]]],[11,R[224],E,E,62,[[["self"]],[T]]],[11,"borrow",E,E,62,[[["self"]],[T]]],[11,R[228],E,E,62,[[["self"]],["typeid"]]],[11,"into",E,E,63,[[],[U]]],[11,R[229],E,E,63,[[["self"]],[T]]],[11,R[227],E,E,63,[[["self"],[T]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[225],E,E,63,[[[U]],["result"]]],[11,R[226],E,E,63,[[],["result"]]],[11,R[224],E,E,63,[[["self"]],[T]]],[11,"borrow",E,E,63,[[["self"]],[T]]],[11,R[228],E,E,63,[[["self"]],["typeid"]]],[11,"into",E,E,64,[[],[U]]],[11,R[229],E,E,64,[[["self"]],[T]]],[11,R[227],E,E,64,[[["self"],[T]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[225],E,E,64,[[[U]],["result"]]],[11,R[226],E,E,64,[[],["result"]]],[11,R[224],E,E,64,[[["self"]],[T]]],[11,"borrow",E,E,64,[[["self"]],[T]]],[11,R[228],E,E,64,[[["self"]],["typeid"]]],[11,"into",E,E,65,[[],[U]]],[11,R[229],E,E,65,[[["self"]],[T]]],[11,R[227],E,E,65,[[["self"],[T]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[225],E,E,65,[[[U]],["result"]]],[11,R[226],E,E,65,[[],["result"]]],[11,R[224],E,E,65,[[["self"]],[T]]],[11,"borrow",E,E,65,[[["self"]],[T]]],[11,R[228],E,E,65,[[["self"]],["typeid"]]],[11,"into",E,E,66,[[],[U]]],[11,R[230],E,E,66,[[["self"]],["string"]]],[11,R[229],E,E,66,[[["self"]],[T]]],[11,R[227],E,E,66,[[["self"],[T]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[225],E,E,66,[[[U]],["result"]]],[11,R[226],E,E,66,[[],["result"]]],[11,R[224],E,E,66,[[["self"]],[T]]],[11,"borrow",E,E,66,[[["self"]],[T]]],[11,R[228],E,E,66,[[["self"]],["typeid"]]],[11,"into",E,E,67,[[],[U]]],[11,R[229],E,E,67,[[["self"]],[T]]],[11,R[227],E,E,67,[[["self"],[T]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[225],E,E,67,[[[U]],["result"]]],[11,R[226],E,E,67,[[],["result"]]],[11,R[224],E,E,67,[[["self"]],[T]]],[11,"borrow",E,E,67,[[["self"]],[T]]],[11,R[228],E,E,67,[[["self"]],["typeid"]]],[11,"into",E,E,68,[[],[U]]],[11,R[229],E,E,68,[[["self"]],[T]]],[11,R[227],E,E,68,[[["self"],[T]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[225],E,E,68,[[[U]],["result"]]],[11,R[226],E,E,68,[[],["result"]]],[11,R[224],E,E,68,[[["self"]],[T]]],[11,"borrow",E,E,68,[[["self"]],[T]]],[11,R[228],E,E,68,[[["self"]],["typeid"]]],[11,"into",E,E,69,[[],[U]]],[11,R[229],E,E,69,[[["self"]],[T]]],[11,R[227],E,E,69,[[["self"],[T]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[225],E,E,69,[[[U]],["result"]]],[11,R[226],E,E,69,[[],["result"]]],[11,R[224],E,E,69,[[["self"]],[T]]],[11,"borrow",E,E,69,[[["self"]],[T]]],[11,R[228],E,E,69,[[["self"]],["typeid"]]],[11,"into",E,E,70,[[],[U]]],[11,R[229],E,E,70,[[["self"]],[T]]],[11,R[227],E,E,70,[[["self"],[T]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[225],E,E,70,[[[U]],["result"]]],[11,R[226],E,E,70,[[],["result"]]],[11,R[224],E,E,70,[[["self"]],[T]]],[11,"borrow",E,E,70,[[["self"]],[T]]],[11,R[228],E,E,70,[[["self"]],["typeid"]]],[11,"into",E,E,71,[[],[U]]],[11,R[229],E,E,71,[[["self"]],[T]]],[11,R[227],E,E,71,[[["self"],[T]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[225],E,E,71,[[[U]],["result"]]],[11,R[226],E,E,71,[[],["result"]]],[11,R[224],E,E,71,[[["self"]],[T]]],[11,"borrow",E,E,71,[[["self"]],[T]]],[11,R[228],E,E,71,[[["self"]],["typeid"]]],[11,"into",E,E,72,[[],[U]]],[11,R[229],E,E,72,[[["self"]],[T]]],[11,R[227],E,E,72,[[["self"],[T]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[225],E,E,72,[[[U]],["result"]]],[11,R[226],E,E,72,[[],["result"]]],[11,R[224],E,E,72,[[["self"]],[T]]],[11,"borrow",E,E,72,[[["self"]],[T]]],[11,R[228],E,E,72,[[["self"]],["typeid"]]],[11,"into",E,E,73,[[],[U]]],[11,R[229],E,E,73,[[["self"]],[T]]],[11,R[227],E,E,73,[[["self"],[T]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[225],E,E,73,[[[U]],["result"]]],[11,R[226],E,E,73,[[],["result"]]],[11,R[224],E,E,73,[[["self"]],[T]]],[11,"borrow",E,E,73,[[["self"]],[T]]],[11,R[228],E,E,73,[[["self"]],["typeid"]]],[11,"into",E,E,74,[[],[U]]],[11,R[229],E,E,74,[[["self"]],[T]]],[11,R[227],E,E,74,[[["self"],[T]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[225],E,E,74,[[[U]],["result"]]],[11,R[226],E,E,74,[[],["result"]]],[11,R[224],E,E,74,[[["self"]],[T]]],[11,"borrow",E,E,74,[[["self"]],[T]]],[11,R[228],E,E,74,[[["self"]],["typeid"]]],[11,"into",R[221],E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[225],E,E,91,[[[U]],["result"]]],[11,R[226],E,E,91,[[],["result"]]],[11,R[224],E,E,91,[[["self"]],[T]]],[11,"borrow",E,E,91,[[["self"]],[T]]],[11,R[228],E,E,91,[[["self"]],["typeid"]]],[11,"name","walrus",E,0,[[["self"]],["str"]]],[11,"data",E,E,0,[[["self"],[R[231]]],["cow"]]],[11,R[233],E,E,95,[[],[["option",["box"]],["id",["option"]]]]],[11,"section",E,E,95,[[[R[232]]],[["option",[R[232]]],[R[232]]]]],[11,R[234],E,E,95,[[[R[232]]],[["option",[R[232]]],[R[232]]]]],[11,R[235],E,E,95,[[["box",[R[232]]],[R[232]]],[["box",[R[232]]],["option",["box"]]]]],[11,R[233],E,E,94,[[],[["option",["box"]],["id",["option"]]]]],[11,"section",E,E,94,[[[R[232]]],[["option"],[T]]]],[11,R[234],E,E,94,[[[R[232]]],[["option"],[T]]]],[11,R[235],E,E,94,[[["box",[R[232]]],[R[232]]],[["option",["box"]],["box"]]]],[11,R[236],E,E,24,[[],[R[231]]]],[11,R[236],E,E,77,[[],[R[189]]]],[11,R[236],E,E,78,[[],["modulecustomsections"]]],[11,R[236],E,E,79,[[],["moduledata"]]],[11,R[236],E,E,80,[[],["moduleelements"]]],[11,R[236],E,E,81,[[],["moduleexports"]]],[11,R[236],E,E,82,[[],[R[204]]]],[11,R[236],E,E,83,[[],["moduleglobals"]]],[11,R[236],E,E,84,[[],["moduleimports"]]],[11,R[236],E,E,85,[[],["modulelocals"]]],[11,R[236],E,E,86,[[],["modulememories"]]],[11,R[236],E,E,87,[[],["moduleproducers"]]],[11,R[236],E,E,10,[[],[R[237]]]],[11,R[236],E,E,88,[[],["moduletables"]]],[11,R[236],E,E,89,[[],[R[173]]]],[11,R[236],E,E,12,[[],["module"]]],[11,R[236],E,E,90,[[],["indicestoids"]]],[11,R[236],R[221],E,91,[[],["used"]]],[11,"clone","walrus",E,14,[[["self"]],[R[243]]]],[11,"clone",E,E,15,[[["self"]],["initexpr"]]],[11,"clone",R[88],E,27,[[["self"]],["local"]]],[11,"clone",E,E,64,[[["self"]],[R[174]]]],[11,"clone",E,E,29,[[["self"]],["block"]]],[11,"clone",E,E,30,[[["self"]],["loop"]]],[11,"clone",E,E,31,[[["self"]],["call"]]],[11,"clone",E,E,32,[[["self"]],[R[114]]]],[11,"clone",E,E,33,[[["self"]],[R[175]]]],[11,"clone",E,E,34,[[["self"]],[R[176]]]],[11,"clone",E,E,35,[[["self"]],[R[177]]]],[11,"clone",E,E,36,[[["self"]],[R[119]]]],[11,"clone",E,E,37,[[["self"]],[R[121]]]],[11,"clone",E,E,38,[[["self"]],["const"]]],[11,"clone",E,E,39,[[["self"]],["binop"]]],[11,"clone",E,E,40,[[["self"]],["unop"]]],[11,"clone",E,E,96,[[["self"]],["select"]]],[11,"clone",E,E,97,[[["self"]],[R[127]]]],[11,"clone",E,E,41,[[["self"]],["br"]]],[11,"clone",E,E,42,[[["self"]],["brif"]]],[11,"clone",E,E,43,[[["self"]],["ifelse"]]],[11,"clone",E,E,44,[[["self"]],[R[178]]]],[11,"clone",E,E,98,[[["self"]],["drop"]]],[11,"clone",E,E,99,[[["self"]],["return"]]],[11,"clone",E,E,45,[[["self"]],[R[135]]]],[11,"clone",E,E,46,[[["self"]],[R[137]]]],[11,"clone",E,E,47,[[["self"]],[R[139]]]],[11,"clone",E,E,48,[[["self"]],[R[179]]]],[11,"clone",E,E,49,[[["self"]],[R[142]]]],[11,"clone",E,E,50,[[["self"]],[R[144]]]],[11,"clone",E,E,51,[[["self"]],["load"]]],[11,"clone",E,E,52,[[["self"]],["store"]]],[11,"clone",E,E,53,[[["self"]],[R[148]]]],[11,"clone",E,E,54,[[["self"]],[R[180]]]],[11,"clone",E,E,55,[[["self"]],[R[151]]]],[11,"clone",E,E,56,[[["self"]],[R[153]]]],[11,"clone",E,E,100,[[["self"]],[R[155]]]],[11,"clone",E,E,57,[[["self"]],[R[181]]]],[11,"clone",E,E,58,[[["self"]],[R[182]]]],[11,"clone",E,E,59,[[["self"]],[R[159]]]],[11,"clone",E,E,60,[[["self"]],[R[161]]]],[11,"clone",E,E,101,[[["self"]],[R[183]]]],[11,"clone",E,E,102,[[["self"]],[R[164]]]],[11,"clone",E,E,103,[[["self"]],[R[166]]]],[11,"clone",E,E,104,[[["self"]],[R[168]]]],[11,"clone",E,E,61,[[["self"]],[R[170]]]],[11,"clone",E,E,62,[[["self"]],[R[172]]]],[11,"clone",E,E,65,[[["self"]],["instr"]]],[11,"clone",E,E,66,[[["self"]],["value"]]],[11,"clone",E,E,67,[[["self"]],[R[238]]]],[11,"clone",E,E,68,[[["self"]],["unaryop"]]],[11,"clone",E,E,69,[[["self"]],[R[239]]]],[11,"clone",E,E,70,[[["self"]],[R[188]]]],[11,"clone",E,E,71,[[["self"]],["extendedload"]]],[11,"clone",E,E,72,[[["self"]],[R[184]]]],[11,"clone",E,E,63,[[["self"]],["memarg"]]],[11,"clone",E,E,73,[[["self"]],[R[240]]]],[11,"clone",E,E,74,[[["self"]],[R[185]]]],[11,"clone","walrus",E,77,[[["self"]],[R[189]]]],[11,"clone",E,E,0,[[["self"]],[R[190]]]],[11,"clone",E,E,95,[[["self"]],[R[244]]]],[11,"clone",E,E,94,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],["activedata"]]],[11,"clone",E,E,16,[[["self"]],[R[245]]]],[11,"clone",E,E,4,[[["self"]],["export"]]],[11,"clone",E,E,18,[[["self"]],[R[248]]]],[11,"clone",E,E,8,[[["self"]],[R[2]]]],[11,"clone",E,E,21,[[["self"]],[R[246]]]],[11,"clone",E,E,13,[[["self"]],["type"]]],[11,"clone",E,E,23,[[["self"]],[R[214]]]],[11,R[241],E,E,13,[[["self"],["type"]],[["option",[R[242]]],[R[242]]]]],[11,R[241],E,E,23,[[["self"],[R[214]]],[[R[242]],["option",[R[242]]]]]],[11,"cmp",E,E,13,[[["self"],["type"]],[R[242]]]],[11,"cmp",E,E,23,[[["self"],[R[214]]],[R[242]]]],[11,"eq",E,E,14,[[["self"],[R[243]]],["bool"]]],[11,"eq",R[88],E,27,[[["self"],["local"]],["bool"]]],[11,"ne",E,E,27,[[["self"],["local"]],["bool"]]],[11,"eq",E,E,64,[[["self"],[R[174]]],["bool"]]],[11,"ne",E,E,64,[[["self"],[R[174]]],["bool"]]],[11,"eq","walrus",E,0,[[["self"],[R[190]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[190]]],["bool"]]],[11,"eq",E,E,95,[[["self"],[R[244]]],["bool"]]],[11,"ne",E,E,95,[[["self"],[R[244]]],["bool"]]],[11,"eq",E,E,94,[[["self"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[245]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[245]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[2]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[2]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[246]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[246]]],["bool"]]],[11,"eq",E,E,13,[[["self"],["type"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[214]]],["bool"]]],[11,"from",R[88],E,64,[[["option",[R[214]]],[R[214]]],[R[174]]]],[11,"from",E,E,64,[[[R[214]]],[R[174]]]],[11,"from",E,E,64,[[["typeid"]],[R[174]]]],[11,"from",E,E,65,[[["block"]],["instr"]]],[11,"from",E,E,65,[[["loop"]],["instr"]]],[11,"from",E,E,65,[[["call"]],["instr"]]],[11,"from",E,E,65,[[[R[114]]],["instr"]]],[11,"from",E,E,65,[[[R[175]]],["instr"]]],[11,"from",E,E,65,[[[R[176]]],["instr"]]],[11,"from",E,E,65,[[[R[177]]],["instr"]]],[11,"from",E,E,65,[[[R[119]]],["instr"]]],[11,"from",E,E,65,[[[R[121]]],["instr"]]],[11,"from",E,E,65,[[["const"]],["instr"]]],[11,"from",E,E,65,[[["binop"]],["instr"]]],[11,"from",E,E,65,[[["unop"]],["instr"]]],[11,"from",E,E,65,[[["select"]],["instr"]]],[11,"from",E,E,65,[[[R[127]]],["instr"]]],[11,"from",E,E,65,[[["br"]],["instr"]]],[11,"from",E,E,65,[[["brif"]],["instr"]]],[11,"from",E,E,65,[[["ifelse"]],["instr"]]],[11,"from",E,E,65,[[[R[178]]],["instr"]]],[11,"from",E,E,65,[[["drop"]],["instr"]]],[11,"from",E,E,65,[[["return"]],["instr"]]],[11,"from",E,E,65,[[[R[135]]],["instr"]]],[11,"from",E,E,65,[[[R[137]]],["instr"]]],[11,"from",E,E,65,[[[R[139]]],["instr"]]],[11,"from",E,E,65,[[[R[179]]],["instr"]]],[11,"from",E,E,65,[[[R[142]]],["instr"]]],[11,"from",E,E,65,[[[R[144]]],["instr"]]],[11,"from",E,E,65,[[["load"]],["instr"]]],[11,"from",E,E,65,[[["store"]],["instr"]]],[11,"from",E,E,65,[[[R[148]]],["instr"]]],[11,"from",E,E,65,[[[R[180]]],["instr"]]],[11,"from",E,E,65,[[[R[151]]],["instr"]]],[11,"from",E,E,65,[[[R[153]]],["instr"]]],[11,"from",E,E,65,[[[R[155]]],["instr"]]],[11,"from",E,E,65,[[[R[181]]],["instr"]]],[11,"from",E,E,65,[[[R[182]]],["instr"]]],[11,"from",E,E,65,[[[R[159]]],["instr"]]],[11,"from",E,E,65,[[[R[161]]],["instr"]]],[11,"from",E,E,65,[[[R[183]]],["instr"]]],[11,"from",E,E,65,[[[R[164]]],["instr"]]],[11,"from",E,E,65,[[[R[166]]],["instr"]]],[11,"from",E,E,65,[[[R[168]]],["instr"]]],[11,"from",E,E,65,[[[R[170]]],["instr"]]],[11,"from",E,E,65,[[[R[172]]],["instr"]]],[11,"from","walrus",E,95,[[[R[247]]],["self"]]],[11,"from",E,E,18,[[[R[99]]],[R[248]]]],[11,"from",E,E,18,[[[R[12]]],[R[248]]]],[11,"from",E,E,18,[[[R[105]]],[R[248]]]],[11,"from",E,E,18,[[[R[186]]],[R[248]]]],[11,"from",E,E,21,[[[R[99]]],[R[246]]]],[11,"from",E,E,21,[[[R[12]]],[R[246]]]],[11,"from",E,E,21,[[[R[105]]],[R[246]]]],[11,"from",E,E,21,[[[R[186]]],[R[246]]]],[11,R[249],E,E,26,[[["self"]],[R[198]]]],[11,R[249],R[88],E,28,[[["self"]],["vec"]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash","walrus",E,95,[[["self"],["__h"]]]],[11,"hash",E,E,94,[[["self"],["h"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,21,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["h"]]]],[11,"hash",E,E,23,[[["self"],["__h"]]]],[11,"deref",E,E,26,[[["self"]],[R[198]]]],[11,"deref",R[88],E,28,[[["self"]],["vec"]]],[11,"fmt","walrus",E,14,[[["self"],[R[250]]],["result"]]],[11,"fmt",R[88],E,66,[[["self"],[R[250]]],["result"]]],[11,"fmt","walrus",E,23,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,24,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,14,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,25,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,26,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,15,[[["self"],[R[250]]],["result"]]],[11,"fmt",R[88],E,27,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,64,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,28,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,29,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,30,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,31,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,32,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,33,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,34,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,35,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,36,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,37,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,38,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,39,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,40,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,96,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,97,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,41,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,42,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,43,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,44,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,98,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,99,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,45,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,46,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,47,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,48,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,49,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,50,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,51,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,52,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,53,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,54,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,55,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,56,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,100,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,57,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,58,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,59,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,60,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,101,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,102,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,103,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,104,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,61,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,62,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,65,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,66,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,67,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,68,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,69,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,70,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,71,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,72,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,63,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,73,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,74,[[["self"],[R[250]]],["result"]]],[11,"fmt","walrus",E,77,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,0,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,95,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,94,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,78,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,2,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,17,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,1,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,16,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,79,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,3,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,80,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,4,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,18,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,81,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,6,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,5,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,19,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,82,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,7,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,20,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,83,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,8,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,21,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,84,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,85,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,9,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,86,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,87,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,11,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,22,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,10,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,88,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,89,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,12,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,90,[[["self"],[R[250]]],["result"]]],[11,"fmt",R[221],E,91,[[["self"],[R[250]]],["result"]]],[11,"fmt","walrus",E,13,[[["self"],[R[250]]],["result"]]],[11,"fmt",E,E,23,[[["self"],[R[250]]],["result"]]],[11,"into_any",E,"Convert this custom section to `Box<Any>` to do dynamic…",92,[[["box"]],[["box",["any"]],["any"]]]],[11,"as_any",E,"Convert this custom section to `&Any` to do dynamic…",92,[[["self"]],["any"]]],[11,"as_any_mut",E,"Convert this custom section to `&mut Any` to do dynamic…",92,[[["self"]],["any"]]]],"p":[[3,R[251]],[3,R[252]],[3,"Data"],[3,"Element"],[3,"Export"],[3,R[5]],[3,R[253]],[3,R[4]],[3,R[7]],[3,R[6]],[3,R[254]],[3,"Table"],[3,"Module"],[3,"Type"],[4,R[255]],[4,"InitExpr"],[4,R[256]],[4,"DataKind"],[4,R[257]],[4,R[258]],[4,R[259]],[4,R[260]],[4,R[261]],[4,"ValType"],[3,R[262]],[3,R[263]],[3,R[264]],[3,"Local"],[3,"InstrSeq"],[3,"Block"],[3,"Loop"],[3,"Call"],[3,R[25]],[3,R[27]],[3,R[29]],[3,R[31]],[3,R[33]],[3,R[35]],[3,"Const"],[3,"Binop"],[3,"Unop"],[3,"Br"],[3,"BrIf"],[3,"IfElse"],[3,"BrTable"],[3,R[46]],[3,R[48]],[3,R[50]],[3,R[52]],[3,R[54]],[3,R[56]],[3,"Load"],[3,"Store"],[3,R[60]],[3,"Cmpxchg"],[3,R[63]],[3,R[65]],[3,R[69]],[3,R[71]],[3,R[73]],[3,R[75]],[3,R[84]],[3,R[86]],[3,"MemArg"],[4,R[265]],[4,"Instr"],[4,"Value"],[4,"BinaryOp"],[4,"UnaryOp"],[4,"LoadKind"],[4,R[266]],[4,R[267]],[4,R[268]],[4,"AtomicOp"],[4,R[269]],[8,"Visitor"],[8,R[270]],[3,R[271]],[3,R[272]],[3,R[273]],[3,R[274]],[3,R[275]],[3,R[276]],[3,R[277]],[3,R[278]],[3,R[279]],[3,R[280]],[3,R[281]],[3,R[282]],[3,R[283]],[3,R[284]],[3,"Used"],[8,R[223]],[8,R[285]],[3,R[286]],[3,R[287]],[3,"Select"],[3,R[41]],[3,"Drop"],[3,"Return"],[3,R[67]],[3,"RefNull"],[3,R[78]],[3,R[80]],[3,R[82]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);